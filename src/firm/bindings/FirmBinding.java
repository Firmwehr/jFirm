package firm.bindings;

/* WARNING: Automatically generated file */
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.Platform;
import com.sun.jna.Pointer;
import com.sun.jna.NativeLong;


public interface FirmBinding extends Library {
	
//	/* firm_kind */int get_kind(Pointer firm_thing);
//	String print_firm_kind(Pointer firm_thing);
//	void firm_identify_thing(Pointer X);
//	Pointer new_id_from_str(String str);
//	Pointer new_id_from_chars(String str, int len);
//	String get_id_str(Pointer id);
//	int get_id_strlen(Pointer id);
//	int id_is_prefix(Pointer prefix, Pointer id);
//	int id_is_suffix(Pointer suffix, Pointer id);
//	int id_contains_char(Pointer id, byte c);
//	Pointer id_unique(String tag);
//	void firm_init_mangle();
//	Pointer id_mangle_entity(Pointer ent);
//	Pointer id_mangle_u(Pointer first, Pointer scnd);
//	Pointer id_mangle_dot(Pointer first, Pointer scnd);
//	Pointer id_mangle(Pointer first, Pointer scnd);
//	Pointer id_mangle3(String prefix, Pointer middle, String suffix);
//	Pointer id_decorate_win32_c_fkt(Pointer ent, Pointer id);
//	Pointer get_op_Block();
//	Pointer get_op_Start();
//	Pointer get_op_End();
//	Pointer get_op_Jmp();
//	Pointer get_op_IJmp();
//	Pointer get_op_Cond();
//	Pointer get_op_Return();
//	Pointer get_op_Sel();
//	Pointer get_op_Const();
//	Pointer get_op_SymConst();
//	Pointer get_op_Call();
//	Pointer get_op_Add();
//	Pointer get_op_Sub();
//	Pointer get_op_Minus();
//	Pointer get_op_Mul();
//	Pointer get_op_Mulh();
//	Pointer get_op_Quot();
//	Pointer get_op_DivMod();
//	Pointer get_op_Div();
//	Pointer get_op_Mod();
//	Pointer get_op_Abs();
//	Pointer get_op_And();
//	Pointer get_op_Or();
//	Pointer get_op_Eor();
//	Pointer get_op_Not();
//	Pointer get_op_Cmp();
//	Pointer get_op_Shl();
//	Pointer get_op_Shr();
//	Pointer get_op_Shrs();
//	Pointer get_op_Rotl();
//	Pointer get_op_Conv();
//	Pointer get_op_Cast();
//	Pointer get_op_Carry();
//	Pointer get_op_Borrow();
//	Pointer get_op_Phi();
//	Pointer get_op_Load();
//	Pointer get_op_Store();
//	Pointer get_op_Alloc();
//	Pointer get_op_Free();
//	Pointer get_op_Sync();
//	Pointer get_op_Tuple();
//	Pointer get_op_Proj();
//	Pointer get_op_Id();
//	Pointer get_op_Bad();
//	Pointer get_op_Confirm();
//	Pointer get_op_Unknown();
//	Pointer get_op_Filter();
//	Pointer get_op_Break();
//	Pointer get_op_CallBegin();
//	Pointer get_op_EndReg();
//	Pointer get_op_EndExcept();
//	Pointer get_op_NoMem();
//	Pointer get_op_Mux();
//	Pointer get_op_Min();
//	Pointer get_op_Max();
//	Pointer get_op_CopyB();
//	Pointer get_op_InstOf();
//	Pointer get_op_Raise();
//	Pointer get_op_Bound();
//	Pointer get_op_Pin();
//	Pointer get_op_ASM();
//	Pointer get_op_Anchor();
//	Pointer get_op_ident(Pointer op);
//	String get_op_name(Pointer op);
//	int get_op_code(Pointer op);
//	String get_op_pin_state_name(/* op_pin_state */int s);
//	/* op_pin_state */int get_op_pinned(Pointer op);
//	void set_op_pinned(Pointer op, /* op_pin_state */int pinned);
//	int get_next_ir_opcode();
//	int get_next_ir_opcodes(int num);
//	Pointer get_generic_function_ptr(Pointer op);
//	void set_generic_function_ptr(Pointer op, Pointer func);
//	/* irop_flags */int get_op_flags(Pointer op);
//	Pointer new_ir_op(int code, String name, /* op_pin_state */int p, int flags, /* op_arity */int opar, int op_index, NativeLong attr_size, Pointer ops);
//	Pointer get_op_ops(Pointer op);
//	Pointer computed_value(Pointer n);
//	Pointer optimize_in_place(Pointer n);
//	Pointer create_execfreq(Pointer irg);
//	void set_execfreq(Pointer ef, Pointer block, double freq);
//	Pointer compute_execfreq(Pointer irg, double loop_weight);
//	void free_execfreq(Pointer ef);
//	double get_block_execfreq(Pointer ef, Pointer block);
//	NativeLong get_block_execfreq_ulong(Pointer ef, Pointer block);
//	int is_ir_extbb(Pointer thing);
//	void compute_extbb(Pointer irg);
//	void compute_extbb_execfreqs(Pointer irg, Pointer execfreqs);
//	void free_extbb(Pointer irg);
//	Pointer get_nodes_extbb(Pointer node);
//	NativeLong get_extbb_visited(Pointer blk);
//	void set_extbb_visited(Pointer blk, NativeLong visited);
//	void mark_extbb_visited(Pointer blk);
//	int extbb_visited(Pointer blk);
//	int extbb_not_visited(Pointer blk);
//	Pointer get_extbb_link(Pointer blk);
//	void set_extbb_link(Pointer blk, Pointer link);
//	int get_extbb_n_blocks(Pointer blk);
//	Pointer get_extbb_block(Pointer blk, int pos);
//	Pointer get_extbb_leader(Pointer blk);
//	NativeLong get_extbb_node_nr(Pointer blk);
//	void irg_extblock_walk(Pointer blk, Pointer pre, Pointer post, Pointer env);
//	void irg_extblock_walk_graph(Pointer irg, Pointer pre, Pointer post, Pointer env);
//	Pointer new_entity(Pointer owner, Pointer name, Pointer tp);
//	Pointer new_d_entity(Pointer owner, Pointer name, Pointer tp, Pointer db);
//	Pointer copy_entity_own(Pointer old, Pointer new_owner);
//	Pointer copy_entity_name(Pointer old, Pointer new_name);
//	void free_entity(Pointer ent);
//	String get_entity_name(Pointer ent);
//	Pointer get_entity_ident(Pointer ent);
//	void set_entity_ident(Pointer ent, Pointer id);
//	Pointer get_entity_ld_ident(Pointer ent);
//	void set_entity_ld_ident(Pointer ent, Pointer ld_ident);
//	String get_entity_ld_name(Pointer ent);
//	Pointer get_entity_owner(Pointer ent);
//	void set_entity_owner(Pointer ent, Pointer owner);
//	Pointer get_entity_type(Pointer ent);
//	void set_entity_type(Pointer ent, Pointer tp);
//	/* ir_allocation */int get_entity_allocation(Pointer ent);
//	void set_entity_allocation(Pointer ent, /* ir_allocation */int al);
//	String get_allocation_name(/* ir_allocation */int vis);
//	/* ir_visibility */int get_entity_visibility(Pointer ent);
//	void set_entity_visibility(Pointer ent, /* ir_visibility */int vis);
//	String get_visibility_name(/* ir_visibility */int vis);
//	/* ir_variability */int get_entity_variability(Pointer ent);
//	void set_entity_variability(Pointer ent, /* ir_variability */int var);
//	String get_variability_name(/* ir_variability */int var);
//	/* ir_volatility */int get_entity_volatility(Pointer ent);
//	void set_entity_volatility(Pointer ent, /* ir_volatility */int vol);
//	String get_volatility_name(/* ir_volatility */int var);
//	/* ir_align */int get_entity_align(Pointer ent);
//	void set_entity_align(Pointer ent, /* ir_align */int a);
//	String get_align_name(/* ir_align */int a);
//	/* ir_stickyness */int get_entity_stickyness(Pointer ent);
//	void set_entity_stickyness(Pointer ent, /* ir_stickyness */int stickyness);
//	int get_entity_offset(Pointer ent);
//	void set_entity_offset(Pointer ent, int offset);
//	byte get_entity_offset_bits_remainder(Pointer ent);
//	void set_entity_offset_bits_remainder(Pointer ent, byte offset);
//	Pointer get_entity_link(Pointer ent);
//	void set_entity_link(Pointer ent, Pointer l);
//	Pointer get_entity_irg(Pointer ent);
//	void set_entity_irg(Pointer ent, Pointer irg);
//	int get_entity_vtable_number(Pointer ent);
//	void set_entity_vtable_number(Pointer ent, int vtable_number);
//	/* ir_peculiarity */int get_entity_peculiarity(Pointer ent);
//	void set_entity_peculiarity(Pointer ent, /* ir_peculiarity */int pec);
//	int is_entity_final(Pointer ent);
//	void set_entity_final(Pointer ent, int _final);
//	int is_entity_compiler_generated(Pointer ent);
//	void set_entity_compiler_generated(Pointer ent, int flag);
//	int is_entity_backend_marked(Pointer ent);
//	void set_entity_backend_marked(Pointer ent, int flag);
//	/* ir_entity_usage */int get_entity_usage(Pointer ent);
//	void set_entity_usage(Pointer ent, /* ir_entity_usage */int flag);
//	Pointer get_entity_dbg_info(Pointer ent);
//	void set_entity_dbg_info(Pointer ent, Pointer db);
//	int is_irn_const_expression(Pointer n);
//	Pointer copy_const_value(Pointer dbg, Pointer n);
//	Pointer get_atomic_ent_value(Pointer ent);
//	void set_atomic_ent_value(Pointer ent, Pointer val);
//	/* ir_initializer_kind_t */int get_initializer_kind(Pointer initializer);
//	Pointer get_initializer_null();
//	Pointer create_initializer_const(Pointer value);
//	Pointer create_initializer_tarval(Pointer tv);
//	Pointer get_initializer_const_value(Pointer initializer);
//	Pointer get_initializer_tarval_value(Pointer initialzier);
//	Pointer create_initializer_compound(int n_entries);
//	int get_initializer_compound_n_entries(Pointer initializer);
//	void set_initializer_compound_value(Pointer initializer, int index, Pointer value);
//	Pointer get_initializer_compound_value(Pointer initializer, int index);
//	Pointer new_compound_graph_path(Pointer tp, int length);
//	int is_compound_graph_path(Pointer thing);
//	void free_compound_graph_path(Pointer gr);
//	int get_compound_graph_path_length(Pointer gr);
//	Pointer get_compound_graph_path_node(Pointer gr, int pos);
//	void set_compound_graph_path_node(Pointer gr, int pos, Pointer node);
//	int get_compound_graph_path_array_index(Pointer gr, int pos);
//	void set_compound_graph_path_array_index(Pointer gr, int pos, int index);
//	Pointer get_compound_graph_path_type(Pointer gr);
//	int is_proper_compound_graph_path(Pointer gr, int pos);
//	void add_compound_ent_value_w_path(Pointer ent, Pointer val, Pointer path);
//	void set_compound_ent_value_w_path(Pointer ent, Pointer val, Pointer path, int pos);
//	int get_compound_ent_n_values(Pointer ent);
//	Pointer get_compound_ent_value(Pointer ent, int pos);
//	Pointer get_compound_ent_value_path(Pointer ent, int pos);
//	Pointer get_compound_ent_value_by_path(Pointer ent, Pointer path);
//	void remove_compound_ent_value(Pointer ent, Pointer value_ent);
//	void add_compound_ent_value(Pointer ent, Pointer val, Pointer member);
//	Pointer get_compound_ent_value_member(Pointer ent, int pos);
//	void set_compound_ent_value(Pointer ent, Pointer val, Pointer member, int pos);
//	void set_entity_initializer(Pointer entity, Pointer initializer);
//	Pointer get_entity_initializer(Pointer entity);
//	void set_array_entity_values(Pointer ent, Pointer values, int num_vals);
//	int get_compound_ent_value_offset_bit_remainder(Pointer ent, int pos);
//	int get_compound_ent_value_offset_bytes(Pointer ent, int pos);
//	void add_entity_overwrites(Pointer ent, Pointer overwritten);
//	int get_entity_n_overwrites(Pointer ent);
//	int get_entity_overwrites_index(Pointer ent, Pointer overwritten);
//	Pointer get_entity_overwrites(Pointer ent, int pos);
//	void set_entity_overwrites(Pointer ent, int pos, Pointer overwritten);
//	void remove_entity_overwrites(Pointer ent, Pointer overwritten);
//	void add_entity_overwrittenby(Pointer ent, Pointer overwrites);
//	int get_entity_n_overwrittenby(Pointer ent);
//	int get_entity_overwrittenby_index(Pointer ent, Pointer overwrites);
//	Pointer get_entity_overwrittenby(Pointer ent, int pos);
//	void set_entity_overwrittenby(Pointer ent, int pos, Pointer overwrites);
//	void remove_entity_overwrittenby(Pointer ent, Pointer overwrites);
//	int is_entity(Pointer thing);
//	int is_atomic_entity(Pointer ent);
//	int is_compound_entity(Pointer ent);
//	int is_method_entity(Pointer ent);
//	int equal_entity(Pointer ent1, Pointer ent2);
//	NativeLong get_entity_nr(Pointer ent);
//	NativeLong get_entity_visited(Pointer ent);
//	void set_entity_visited(Pointer ent, NativeLong num);
//	void mark_entity_visited(Pointer ent);
//	int entity_visited(Pointer ent);
//	int entity_not_visited(Pointer ent);
//	int get_entity_additional_properties(Pointer ent);
//	void set_entity_additional_properties(Pointer ent, int property_mask);
//	void set_entity_additional_property(Pointer ent, /* mtp_additional_property */int flag);
//	Pointer get_entity_repr_class(Pointer ent);
//	Pointer get_unknown_entity();
//	String get_tpop_name(Pointer op);
//	/* tp_opcode */int get_tpop_code(Pointer op);
//	Pointer get_tpop_ident(Pointer op);
//	Pointer get_tpop_class();
//	Pointer get_tpop_struct();
//	Pointer get_tpop_method();
//	Pointer get_tpop_union();
//	Pointer get_tpop_array();
//	Pointer get_tpop_enumeration();
//	Pointer get_tpop_pointer();
//	Pointer get_tpop_primitive();
//	Pointer get_tpop_id();
//	Pointer get_tpop_none();
//	Pointer get_tpop_unknown();
//	int is_SubClass_of(Pointer low, Pointer high);
//	int is_SubClass_ptr_of(Pointer low, Pointer high);
//	int is_overwritten_by(Pointer high, Pointer low);
//	Pointer resolve_ent_polymorphy(Pointer dynamic_class, Pointer static_ent);
//	Pointer default_mangle_inherited_name(Pointer ent, Pointer clss);
//	void resolve_inheritance(Pointer mfunc);
//	void set_irp_inh_transitive_closure_state(/* inh_transitive_closure_state */int s);
//	void invalidate_irp_inh_transitive_closure_state();
//	/* inh_transitive_closure_state */int get_irp_inh_transitive_closure_state();
//	void compute_inh_transitive_closure();
//	void free_inh_transitive_closure();
//	Pointer get_class_trans_subtype_first(Pointer tp);
//	Pointer get_class_trans_subtype_next(Pointer tp);
//	int is_class_trans_subtype(Pointer tp, Pointer subtp);
//	Pointer get_class_trans_supertype_first(Pointer tp);
//	Pointer get_class_trans_supertype_next(Pointer tp);
//	Pointer get_entity_trans_overwrittenby_first(Pointer ent);
//	Pointer get_entity_trans_overwrittenby_next(Pointer ent);
//	Pointer get_entity_trans_overwrites_first(Pointer ent);
//	Pointer get_entity_trans_overwrites_next(Pointer ent);
//	String get_class_cast_state_string(/* ir_class_cast_state */int s);
//	void set_irg_class_cast_state(Pointer irg, /* ir_class_cast_state */int s);
//	/* ir_class_cast_state */int get_irg_class_cast_state(Pointer irg);
//	void set_irp_class_cast_state(/* ir_class_cast_state */int s);
//	/* ir_class_cast_state */int get_irp_class_cast_state();
//	void verify_irg_class_cast_state(Pointer irg);
//	int check_type(Pointer tp);
//	int check_entity(Pointer ent);
//	int tr_vrfy();
//	void exchange_types(Pointer old_type, Pointer new_type);
//	Pointer skip_tid(Pointer tp);
//	void free_type_entities(Pointer tp);
//	void free_type(Pointer tp);
//	Pointer get_type_tpop(Pointer tp);
//	Pointer get_type_tpop_nameid(Pointer tp);
//	String get_type_tpop_name(Pointer tp);
//	/* tp_opcode */int get_type_tpop_code(Pointer tp);
//	Pointer get_type_ident(Pointer tp);
//	void set_type_ident(Pointer tp, Pointer id);
//	String get_type_name(Pointer tp);
//	/* ir_visibility */int get_type_visibility(Pointer tp);
//	void set_type_visibility(Pointer tp, /* ir_visibility */int v);
//	String get_type_state_name(/* ir_type_state */int s);
//	/* ir_type_state */int get_type_state(Pointer tp);
//	void set_type_state(Pointer tp, /* ir_type_state */int state);
//	Pointer get_type_mode(Pointer tp);
//	void set_type_mode(Pointer tp, Pointer m);
//	int get_type_size_bytes(Pointer tp);
//	void set_type_size_bytes(Pointer tp, int size);
//	int get_type_alignment_bytes(Pointer tp);
//	void set_type_alignment_bytes(Pointer tp, int align);
//	NativeLong get_type_visited(Pointer tp);
//	void set_type_visited(Pointer tp, NativeLong num);
//	void mark_type_visited(Pointer tp);
//	int type_visited(Pointer tp);
//	int type_not_visited(Pointer tp);
//	Pointer get_type_link(Pointer tp);
//	void set_type_link(Pointer tp, Pointer l);
//	void set_master_type_visited(NativeLong val);
//	NativeLong get_master_type_visited();
//	void inc_master_type_visited();
//	void set_type_dbg_info(Pointer tp, Pointer db);
//	Pointer get_type_dbg_info(Pointer tp);
//	int is_type(Pointer thing);
//	int equal_type(Pointer typ1, Pointer typ2);
//	int smaller_type(Pointer st, Pointer lt);
//	Pointer new_type_class(Pointer name);
//	Pointer new_d_type_class(Pointer name, Pointer db);
//	void add_class_member(Pointer clss, Pointer member);
//	int get_class_n_members(Pointer clss);
//	Pointer get_class_member(Pointer clss, int pos);
//	int get_class_member_index(Pointer clss, Pointer mem);
//	Pointer get_class_member_by_name(Pointer clss, Pointer name);
//	void set_class_member(Pointer clss, Pointer member, int pos);
//	void set_class_members(Pointer clss, Pointer members, int arity);
//	void remove_class_member(Pointer clss, Pointer member);
//	void add_class_subtype(Pointer clss, Pointer subtype);
//	int get_class_n_subtypes(Pointer clss);
//	Pointer get_class_subtype(Pointer clss, int pos);
//	int get_class_subtype_index(Pointer clss, Pointer subclass);
//	void set_class_subtype(Pointer clss, Pointer subtype, int pos);
//	void remove_class_subtype(Pointer clss, Pointer subtype);
//	void add_class_supertype(Pointer clss, Pointer supertype);
//	int get_class_n_supertypes(Pointer clss);
//	int get_class_supertype_index(Pointer clss, Pointer super_clss);
//	Pointer get_class_supertype(Pointer clss, int pos);
//	void set_class_supertype(Pointer clss, Pointer supertype, int pos);
//	void remove_class_supertype(Pointer clss, Pointer supertype);
//	String get_peculiarity_name(/* ir_peculiarity */int p);
//	/* ir_peculiarity */int get_class_peculiarity(Pointer clss);
//	void set_class_peculiarity(Pointer clss, /* ir_peculiarity */int pec);
//	Pointer get_class_type_info(Pointer clss);
//	void set_class_type_info(Pointer clss, Pointer ent);
//	int get_class_vtable_size(Pointer clss);
//	void set_class_vtable_size(Pointer clss, int size);
//	int is_class_final(Pointer clss);
//	void set_class_final(Pointer clss, int flag);
//	int is_class_interface(Pointer clss);
//	void set_class_interface(Pointer clss, int flag);
//	int is_class_abstract(Pointer clss);
//	void set_class_abstract(Pointer clss, int flag);
//	void set_class_dfn(Pointer clss, int dfn);
//	int get_class_dfn(Pointer clss);
//	int is_Class_type(Pointer clss);
//	Pointer new_type_struct(Pointer name);
//	Pointer new_d_type_struct(Pointer name, Pointer db);
//	void add_struct_member(Pointer strct, Pointer member);
//	int get_struct_n_members(Pointer strct);
//	Pointer get_struct_member(Pointer strct, int pos);
//	int get_struct_member_index(Pointer strct, Pointer member);
//	void set_struct_member(Pointer strct, int pos, Pointer member);
//	void remove_struct_member(Pointer strct, Pointer member);
//	int is_Struct_type(Pointer strct);
//	Pointer new_type_method(Pointer name, int n_param, int n_res);
//	Pointer new_d_type_method(Pointer name, int n_param, int n_res, Pointer db);
//	Pointer clone_type_method(Pointer tp, Pointer prefix);
//	int get_method_n_params(Pointer method);
//	Pointer get_method_param_type(Pointer method, int pos);
//	void set_method_param_type(Pointer method, int pos, Pointer tp);
//	Pointer get_method_value_param_ent(Pointer method, int pos);
//	Pointer get_method_value_param_type(Pointer method);
//	Pointer get_method_param_ident(Pointer method, int pos);
//	String get_method_param_name(Pointer method, int pos);
//	void set_method_param_ident(Pointer method, int pos, Pointer id);
//	int get_method_n_ress(Pointer method);
//	Pointer get_method_res_type(Pointer method, int pos);
//	void set_method_res_type(Pointer method, int pos, Pointer tp);
//	Pointer get_method_value_res_ent(Pointer method, int pos);
//	Pointer get_method_value_res_type(Pointer method);
//	String get_variadicity_name(/* variadicity */int vari);
//	/* variadicity */int get_method_variadicity(Pointer method);
//	void set_method_variadicity(Pointer method, /* variadicity */int vari);
//	int get_method_first_variadic_param_index(Pointer method);
//	void set_method_first_variadic_param_index(Pointer method, int index);
//	int get_method_additional_properties(Pointer method);
//	void set_method_additional_properties(Pointer method, int property_mask);
//	void set_method_additional_property(Pointer method, /* mtp_additional_property */int flag);
//	int get_default_cc_mask();
//	int get_method_calling_convention(Pointer method);
//	void set_method_calling_convention(Pointer method, int cc_mask);
//	int get_method_n_regparams(Pointer method);
//	void set_method_n_regparams(Pointer method, int n_regs);
//	int is_Method_type(Pointer method);
//	Pointer new_type_union(Pointer name);
//	Pointer new_d_type_union(Pointer name, Pointer db);
//	int get_union_n_members(Pointer uni);
//	void add_union_member(Pointer uni, Pointer member);
//	Pointer get_union_member(Pointer uni, int pos);
//	int get_union_member_index(Pointer uni, Pointer member);
//	void set_union_member(Pointer uni, int pos, Pointer member);
//	void remove_union_member(Pointer uni, Pointer member);
//	int is_Union_type(Pointer uni);
//	Pointer new_type_array(Pointer name, int n_dims, Pointer element_type);
//	Pointer new_d_type_array(Pointer name, int n_dims, Pointer element_type, Pointer db);
//	int get_array_n_dimensions(Pointer array);
//	void set_array_bounds_int(Pointer array, int dimension, int lower_bound, int upper_bound);
//	void set_array_bounds(Pointer array, int dimension, Pointer lower_bound, Pointer upper_bound);
//	void set_array_lower_bound(Pointer array, int dimension, Pointer lower_bound);
//	void set_array_lower_bound_int(Pointer array, int dimension, int lower_bound);
//	void set_array_upper_bound(Pointer array, int dimension, Pointer upper_bound);
//	void set_array_upper_bound_int(Pointer array, int dimension, int upper_bound);
//	int has_array_lower_bound(Pointer array, int dimension);
//	Pointer get_array_lower_bound(Pointer array, int dimension);
//	NativeLong get_array_lower_bound_int(Pointer array, int dimension);
//	int has_array_upper_bound(Pointer array, int dimension);
//	Pointer get_array_upper_bound(Pointer array, int dimension);
//	NativeLong get_array_upper_bound_int(Pointer array, int dimension);
//	void set_array_order(Pointer array, int dimension, int order);
//	int get_array_order(Pointer array, int dimension);
//	int find_array_dimension(Pointer array, int order);
//	void set_array_element_type(Pointer array, Pointer tp);
//	Pointer get_array_element_type(Pointer array);
//	void set_array_element_entity(Pointer array, Pointer ent);
//	Pointer get_array_element_entity(Pointer array);
//	int is_Array_type(Pointer array);
//	Pointer new_type_enumeration(Pointer name, int n_enums);
//	Pointer new_d_type_enumeration(Pointer name, int n_enums, Pointer db);
//	void set_enumeration_const(Pointer enumeration, int pos, Pointer nameid, Pointer con);
//	int get_enumeration_n_enums(Pointer enumeration);
//	Pointer get_enumeration_const(Pointer enumeration, int pos);
//	Pointer get_enumeration_owner(Pointer enum_cnst);
//	void set_enumeration_value(Pointer enum_cnst, Pointer con);
//	Pointer get_enumeration_value(Pointer enum_cnst);
//	void set_enumeration_nameid(Pointer enum_cnst, Pointer id);
//	Pointer get_enumeration_nameid(Pointer enum_cnst);
//	String get_enumeration_name(Pointer enum_cnst);
//	int is_Enumeration_type(Pointer enumeration);
//	Pointer new_type_pointer(Pointer name, Pointer points_to, Pointer ptr_mode);
//	Pointer new_d_type_pointer(Pointer name, Pointer points_to, Pointer ptr_mode, Pointer db);
//	void set_pointer_points_to_type(Pointer pointer, Pointer tp);
//	Pointer get_pointer_points_to_type(Pointer pointer);
//	int is_Pointer_type(Pointer pointer);
//	Pointer find_pointer_type_to_type(Pointer tp);
//	Pointer new_type_primitive(Pointer name, Pointer mode);
//	Pointer new_d_type_primitive(Pointer name, Pointer mode, Pointer db);
//	int is_Primitive_type(Pointer primitive);
//	Pointer get_primitive_base_type(Pointer tp);
//	void set_primitive_base_type(Pointer tp, Pointer base_tp);
//	Pointer get_none_type();
//	Pointer get_unknown_type();
//	int is_atomic_type(Pointer tp);
//	int get_compound_n_members(Pointer tp);
//	Pointer get_compound_member(Pointer tp, int pos);
//	int get_compound_member_index(Pointer tp, Pointer member);
//	int is_compound_type(Pointer tp);
//	int is_frame_type(Pointer tp);
//	int is_value_param_type(Pointer tp);
//	int is_lowered_type(Pointer tp);
//	Pointer new_type_frame(Pointer name);
//	Pointer clone_frame_type(Pointer type);
//	void set_lowered_type(Pointer tp, Pointer lowered_type);
//	Pointer get_associated_type(Pointer tp);
//	Pointer frame_alloc_area(Pointer frame_type, int size, int alignment, int at_start);
//	NativeLong get_type_nr(Pointer tp);
//	int compare_names(Pointer tp1, Pointer tp2);
//	int compare_strict(Pointer tp1, Pointer tp2);
//	int firm_hash_name(Pointer tp);
//	Pointer mature_type(Pointer tp);
//	Pointer mature_type_free(Pointer tp);
//	Pointer mature_type_free_entities(Pointer tp);
//	void init_type_identify(Pointer ti_if);
//	void type_walk(Pointer pre, Pointer post, Pointer env);
//	void type_walk_irg(Pointer irg, Pointer pre, Pointer post, Pointer env);
//	void type_walk_super2sub(Pointer pre, Pointer post, Pointer env);
//	void type_walk_super(Pointer pre, Pointer post, Pointer env);
//	void class_walk_super2sub(Pointer pre, Pointer post, Pointer env);
//	void walk_types_entities(Pointer tp, Pointer doit, Pointer env);
//	void types_calc_finalization();
//	Pointer get_current_ir_graph();
//	void set_current_ir_graph(Pointer graph);
//	Pointer new_ir_graph(Pointer ent, int n_loc);
//	void free_ir_graph(Pointer irg);
//	int is_ir_graph(Pointer thing);
//	Pointer get_irg_entity(Pointer irg);
//	void set_irg_entity(Pointer irg, Pointer ent);
//	Pointer get_irg_frame_type(Pointer irg);
//	void set_irg_frame_type(Pointer irg, Pointer ftp);
//	Pointer get_irg_start_block(Pointer irg);
//	void set_irg_start_block(Pointer irg, Pointer node);
//	Pointer get_irg_start(Pointer irg);
//	void set_irg_start(Pointer irg, Pointer node);
//	Pointer get_irg_end_block(Pointer irg);
//	void set_irg_end_block(Pointer irg, Pointer node);
//	Pointer get_irg_end(Pointer irg);
//	void set_irg_end(Pointer irg, Pointer node);
//	Pointer get_irg_end_reg(Pointer irg);
//	void set_irg_end_reg(Pointer irg, Pointer node);
//	Pointer get_irg_end_except(Pointer irg);
//	void set_irg_end_except(Pointer irg, Pointer node);
//	Pointer get_irg_initial_exec(Pointer irg);
//	void set_irg_initial_exec(Pointer irg, Pointer node);
//	Pointer get_irg_frame(Pointer irg);
//	void set_irg_frame(Pointer irg, Pointer node);
//	Pointer get_irg_tls(Pointer irg);
//	void set_irg_tls(Pointer irg, Pointer node);
//	Pointer get_irg_initial_mem(Pointer irg);
//	void set_irg_initial_mem(Pointer irg, Pointer node);
//	Pointer get_irg_args(Pointer irg);
//	void set_irg_args(Pointer irg, Pointer node);
//	Pointer get_irg_value_param_base(Pointer irg);
//	void set_irg_value_param_base(Pointer irg, Pointer node);
//	Pointer get_irg_current_block(Pointer irg);
//	void set_irg_current_block(Pointer irg, Pointer node);
//	Pointer get_irg_bad(Pointer irg);
//	void set_irg_bad(Pointer irg, Pointer node);
//	Pointer get_irg_no_mem(Pointer irg);
//	void set_irg_no_mem(Pointer irg, Pointer node);
//	int get_irg_n_locs(Pointer irg);
//	NativeLong get_irg_graph_nr(Pointer irg);
//	int get_irg_idx(Pointer irg);
//	/* irg_phase_state */int get_irg_phase_state(Pointer irg);
//	void set_irg_phase_state(Pointer irg, /* irg_phase_state */int state);
//	/* op_pin_state */int get_irg_pinned(Pointer irg);
//	/* irg_outs_state */int get_irg_outs_state(Pointer irg);
//	void set_irg_outs_inconsistent(Pointer irg);
//	/* irg_extblk_state */int get_irg_extblk_state(Pointer irg);
//	void set_irg_extblk_inconsistent(Pointer irg);
//	/* irg_dom_state */int get_irg_dom_state(Pointer irg);
//	/* irg_dom_state */int get_irg_postdom_state(Pointer irg);
//	void set_irg_doms_inconsistent(Pointer irg);
//	/* irg_loopinfo_state */int get_irg_loopinfo_state(Pointer irg);
//	void set_irg_loopinfo_state(Pointer irg, /* irg_loopinfo_state */int s);
//	void set_irg_loopinfo_inconsistent(Pointer irg);
//	void set_irp_loopinfo_inconsistent();
//	/* irg_callee_info_state */int get_irg_callee_info_state(Pointer irg);
//	void set_irg_callee_info_state(Pointer irg, /* irg_callee_info_state */int s);
//	/* irg_inline_property */int get_irg_inline_property(Pointer irg);
//	void set_irg_inline_property(Pointer irg, /* irg_inline_property */int s);
//	int get_irg_additional_properties(Pointer irg);
//	void set_irg_additional_properties(Pointer irg, int property_mask);
//	void set_irg_additional_property(Pointer irg, /* mtp_additional_property */int flag);
//	void set_irg_link(Pointer irg, Pointer thing);
//	Pointer get_irg_link(Pointer irg);
//	void inc_irg_visited(Pointer irg);
//	NativeLong get_irg_visited(Pointer irg);
//	void set_irg_visited(Pointer irg, NativeLong i);
//	NativeLong get_max_irg_visited();
//	void set_max_irg_visited(int val);
//	NativeLong inc_max_irg_visited();
//	void inc_irg_block_visited(Pointer irg);
//	NativeLong get_irg_block_visited(Pointer irg);
//	void set_irg_block_visited(Pointer irg, NativeLong i);
//	void ir_reserve_resources(Pointer irg, int resources);
//	void ir_free_resources(Pointer irg, int resources);
//	int ir_resources_reserved(Pointer irg);
//	void normalize_proj_nodes(Pointer irg);
//	void set_irg_loc_description(Pointer irg, int n, Pointer description);
//	Pointer get_irg_loc_description(Pointer irg, int n);
//	int get_irg_estimated_node_cnt(Pointer irg);
//	int get_irg_last_idx(Pointer irg);
//	int get_irg_fp_model(Pointer irg);
//	void set_irg_fp_model(Pointer irg, int model);
//	NativeLong register_additional_graph_data(NativeLong size);
//	void irp_reserve_resources(Pointer irp, int resources);
//	void irp_free_resources(Pointer irp, int resources);
//	int irp_resources_reserved(Pointer irp);
//	Pointer get_irp();
//	Pointer new_ir_prog();
//	void free_ir_prog();
//	void set_irp_prog_name(Pointer name);
//	int irp_prog_name_is_set();
//	Pointer get_irp_prog_ident();
//	String get_irp_prog_name();
//	Pointer get_irp_main_irg();
//	void set_irp_main_irg(Pointer main_irg);
//	void add_irp_irg(Pointer irg);
//	void remove_irp_irg_from_list(Pointer irg);
//	void remove_irp_irg(Pointer irg);
//	int get_irp_last_idx();
//	int get_irp_n_irgs();
//	Pointer get_irp_irg(int pos);
//	void set_irp_irg(int pos, Pointer irg);
//	int get_irp_n_allirgs();
//	Pointer get_irp_allirg(int pos);
//	Pointer get_segment_type(/* ir_segment_t */int segment);
//	Pointer get_glob_type();
//	Pointer get_tls_type();
//	void add_irp_type(Pointer typ);
//	void remove_irp_type(Pointer typ);
//	int get_irp_n_types();
//	Pointer get_irp_type(int pos);
//	void set_irp_type(int pos, Pointer typ);
//	int get_irp_n_modes();
//	Pointer get_irp_mode(int pos);
//	void add_irp_opcode(Pointer opcode);
//	void remove_irp_opcode(Pointer opcode);
//	int get_irp_n_opcodes();
//	Pointer get_irp_opcode(int pos);
//	void clear_irp_opcodes_generic_func();
//	Pointer get_const_code_irg();
//	/* irg_phase_state */int get_irp_phase_state();
//	void set_irp_phase_state(/* irg_phase_state */int s);
//	/* irg_outs_state */int get_irp_ip_outs_state();
//	void set_irp_ip_outs_inconsistent();
//	/* irg_callee_info_state */int get_irp_callee_info_state();
//	void set_irp_callee_info_state(/* irg_callee_info_state */int s);
//	NativeLong get_irp_next_region_nr();
//	NativeLong get_irp_next_label_nr();
//	void add_irp_asm(Pointer asm_string);
//	int get_irp_n_asms();
//	Pointer get_irp_asm(int pos);


//	int is_ir_node(Pointer thing);
//	int get_irn_arity(Pointer node);
//	int get_irn_intra_arity(Pointer node);
//	int get_irn_inter_arity(Pointer node);
//	void set_irn_in(Pointer node, int arity, Pointer in);
//	Pointer get_irn_n(Pointer node, int n);
//	int add_irn_dep(Pointer node, Pointer dep);
//	void add_irn_deps(Pointer tgt, Pointer src);
//	int get_irn_deps(Pointer node);
//	Pointer get_irn_dep(Pointer node, int pos);
//	void set_irn_dep(Pointer node, int pos, Pointer dep);
//	Pointer get_irn_intra_n(Pointer node, int n);
//	Pointer get_irn_inter_n(Pointer node, int n);
//	void set_irn_n(Pointer node, int n, Pointer in);
//	int add_irn_n(Pointer node, Pointer in);
//	void del_Sync_n(Pointer n, int i);
//	void set_irn_mode(Pointer node, Pointer mode);
//	Pointer get_irn_mode(Pointer node);
//	/* ir_modecode */int get_irn_modecode(Pointer node);
//	Pointer get_irn_modeident(Pointer node);
//	String get_irn_modename(Pointer node);
//	Pointer get_irn_op(Pointer node);
//	void set_irn_op(Pointer node, Pointer op);
//	int get_irn_opcode(Pointer node);
//	String get_irn_opname(Pointer node);
//	Pointer get_irn_opident(Pointer node);
//	int get_irn_pred_pos(Pointer node, Pointer arg);
//	NativeLong get_irn_visited(Pointer node);
//	void set_irn_visited(Pointer node, NativeLong visited);
//	void mark_irn_visited(Pointer node);
//	int irn_visited(Pointer node);
//	int irn_visited_else_mark(Pointer node);
//	void set_irn_link(Pointer node, Pointer link);
//	Pointer get_irn_link(Pointer node);
//	Pointer get_irn_irg(Pointer node);
//	NativeLong get_irn_node_nr(Pointer node);
//	/* op_pin_state */int get_irn_pinned(Pointer node);
//	void set_irn_pinned(Pointer node, /* op_pin_state */int state);
//	/* op_pin_state */int is_irn_pinned_in_irg(Pointer node);
//	Pointer new_ir_node(Pointer db, Pointer irg, Pointer block, Pointer op, Pointer mode, int arity, Pointer in);
//	Pointer get_nodes_block(Pointer node);
//	void set_nodes_block(Pointer node, Pointer block);
//	Pointer get_nodes_MacroBlock(Pointer node);
//	Pointer is_frame_pointer(Pointer n);
//	Pointer is_tls_pointer(Pointer n);
//	int is_value_arg_pointer(Pointer n);
//	Pointer get_Block_cfgpred_arr(Pointer node);
//	int get_Block_n_cfgpreds(Pointer node);
//	Pointer get_Block_cfgpred(Pointer node, int pos);
//	void set_Block_cfgpred(Pointer node, int pos, Pointer pred);
//	Pointer get_Block_cfgpred_block(Pointer node, int pos);
//	int get_Block_matured(Pointer node);
//	void set_Block_matured(Pointer node, int matured);
//	NativeLong get_Block_block_visited(Pointer node);
//	void set_Block_block_visited(Pointer node, NativeLong visit);
//	Pointer set_Block_dead(Pointer block);
//	int is_Block_dead(Pointer block);
//	void mark_Block_block_visited(Pointer node);
//	int Block_block_visited(Pointer node);
//	Pointer get_Block_extbb(Pointer block);
//	void set_Block_extbb(Pointer block, Pointer extblk);
//	Pointer get_Block_MacroBlock(Pointer block);
//	void set_Block_MacroBlock(Pointer block, Pointer mbh);
//	Pointer get_irn_MacroBlock(Pointer n);
//	Pointer get_Block_irg(Pointer block);
//	int has_Block_label(Pointer block);
//	NativeLong get_Block_label(Pointer block);
//	void set_Block_label(Pointer block, NativeLong label);
//	Pointer get_Block_phis(Pointer block);
//	void set_Block_phis(Pointer block, Pointer phi);
//	void add_Block_phi(Pointer block, Pointer phi);
//	int get_Block_mark(Pointer block);
//	void set_Block_mark(Pointer block, int mark);
//	int get_End_n_keepalives(Pointer end);
//	Pointer get_End_keepalive(Pointer end, int pos);
//	void add_End_keepalive(Pointer end, Pointer ka);
//	void set_End_keepalive(Pointer end, int pos, Pointer ka);
//	void set_End_keepalives(Pointer end, int n, Pointer in);
//	void remove_End_keepalive(Pointer end, Pointer irn);
//	void free_End(Pointer end);
//	Pointer get_IJmp_target(Pointer ijmp);
//	void set_IJmp_target(Pointer ijmp, Pointer tgt);
//	Pointer get_Cond_selector(Pointer node);
//	void set_Cond_selector(Pointer node, Pointer selector);
//	/* cond_kind */int get_Cond_kind(Pointer node);
//	void set_Cond_kind(Pointer node, /* cond_kind */int kind);
//	NativeLong get_Cond_defaultProj(Pointer node);
//	Pointer get_Return_mem(Pointer node);
//	void set_Return_mem(Pointer node, Pointer mem);
//	Pointer get_Return_res_arr(Pointer node);
//	int get_Return_n_ress(Pointer node);
//	Pointer get_Return_res(Pointer node, int pos);
//	void set_Return_res(Pointer node, int pos, Pointer res);
//	Pointer get_Const_tarval(Pointer node);
//	void set_Const_tarval(Pointer node, Pointer con);
//	int is_Const_null(Pointer node);
//	int is_Const_one(Pointer node);
//	int is_Const_all_one(Pointer node);
//	Pointer get_Const_type(Pointer node);
//	void set_Const_type(Pointer node, Pointer tp);
//	/* symconst_kind */int get_SymConst_kind(Pointer node);
//	void set_SymConst_kind(Pointer node, /* symconst_kind */int num);
//	Pointer get_SymConst_type(Pointer node);
//	void set_SymConst_type(Pointer node, Pointer tp);
//	Pointer get_SymConst_name(Pointer node);
//	void set_SymConst_name(Pointer node, Pointer name);
//	Pointer get_SymConst_entity(Pointer node);
//	void set_SymConst_entity(Pointer node, Pointer ent);
//	Pointer get_SymConst_enum(Pointer node);
//	void set_SymConst_enum(Pointer node, Pointer ec);
////	symconst_symbol get_SymConst_symbol(Pointer node);
////	void set_SymConst_symbol(Pointer node, symconst_symbol sym);
//	NativeLong get_SymConst_label(Pointer node);
//	void set_SymConst_label(Pointer node, NativeLong label);
//	Pointer get_SymConst_value_type(Pointer node);
//	void set_SymConst_value_type(Pointer node, Pointer tp);
//	Pointer get_Sel_mem(Pointer node);
//	void set_Sel_mem(Pointer node, Pointer mem);
//	Pointer get_Sel_ptr(Pointer node);
//	void set_Sel_ptr(Pointer node, Pointer ptr);
//	Pointer get_Sel_index_arr(Pointer node);
//	int get_Sel_n_indexs(Pointer node);
//	Pointer get_Sel_index(Pointer node, int pos);
//	void set_Sel_index(Pointer node, int pos, Pointer index);
//	Pointer get_Sel_entity(Pointer node);
//	void set_Sel_entity(Pointer node, Pointer ent);
//	Pointer get_Call_mem(Pointer node);
//	void set_Call_mem(Pointer node, Pointer mem);
//	Pointer get_Call_ptr(Pointer node);
//	void set_Call_ptr(Pointer node, Pointer ptr);
//	Pointer get_Call_param_arr(Pointer node);
//	int get_Call_n_params(Pointer node);
//	Pointer get_Call_param(Pointer node, int pos);
//	void set_Call_param(Pointer node, int pos, Pointer param);
//	Pointer get_Call_type(Pointer node);
//	void set_Call_type(Pointer node, Pointer tp);
//	int get_Call_arity(Pointer node);
//	int is_self_recursive_Call(Pointer call);
//	int Call_has_callees(Pointer node);
//	int get_Call_n_callees(Pointer node);
//	Pointer get_Call_callee(Pointer node, int pos);
//	void set_Call_callee_arr(Pointer node, int n, Pointer arr);
//	void remove_Call_callee_arr(Pointer node);
//	Pointer get_CallBegin_ptr(Pointer node);
//	void set_CallBegin_ptr(Pointer node, Pointer ptr);
//	Pointer get_CallBegin_call(Pointer node);
//	void set_CallBegin_call(Pointer node, Pointer call);
//	int is_unop(Pointer node);
//	Pointer get_unop_op(Pointer node);
//	void set_unop_op(Pointer node, Pointer op);
//	int is_binop(Pointer node);
//	Pointer get_binop_left(Pointer node);
//	void set_binop_left(Pointer node, Pointer left);
//	Pointer get_binop_right(Pointer node);
//	void set_binop_right(Pointer node, Pointer right);
//	Pointer get_Add_left(Pointer node);
//	void set_Add_left(Pointer node, Pointer left);
//	Pointer get_Add_right(Pointer node);
//	void set_Add_right(Pointer node, Pointer right);
//	Pointer get_Carry_left(Pointer node);
//	void set_Carry_left(Pointer node, Pointer left);
//	Pointer get_Carry_right(Pointer node);
//	void set_Carry_right(Pointer node, Pointer right);
//	Pointer get_Sub_left(Pointer node);
//	void set_Sub_left(Pointer node, Pointer left);
//	Pointer get_Sub_right(Pointer node);
//	void set_Sub_right(Pointer node, Pointer right);
//	Pointer get_Minus_op(Pointer node);
//	void set_Minus_op(Pointer node, Pointer op);
//	Pointer get_Mul_left(Pointer node);
//	void set_Mul_left(Pointer node, Pointer left);
//	Pointer get_Mul_right(Pointer node);
//	void set_Mul_right(Pointer node, Pointer right);
//	Pointer get_Mulh_left(Pointer node);
//	void set_Mulh_left(Pointer node, Pointer left);
//	Pointer get_Mulh_right(Pointer node);
//	void set_Mulh_right(Pointer node, Pointer right);
//	Pointer get_Quot_left(Pointer node);
//	void set_Quot_left(Pointer node, Pointer left);
//	Pointer get_Quot_right(Pointer node);
//	void set_Quot_right(Pointer node, Pointer right);
//	Pointer get_Quot_mem(Pointer node);
//	void set_Quot_mem(Pointer node, Pointer mem);
//	Pointer get_Quot_resmode(Pointer node);
//	void set_Quot_resmode(Pointer node, Pointer mode);
//	Pointer get_DivMod_left(Pointer node);
//	void set_DivMod_left(Pointer node, Pointer left);
//	Pointer get_DivMod_right(Pointer node);
//	void set_DivMod_right(Pointer node, Pointer right);
//	Pointer get_DivMod_mem(Pointer node);
//	void set_DivMod_mem(Pointer node, Pointer mem);
//	Pointer get_DivMod_resmode(Pointer node);
//	void set_DivMod_resmode(Pointer node, Pointer mode);
//	Pointer get_Div_left(Pointer node);
//	void set_Div_left(Pointer node, Pointer left);
//	Pointer get_Div_right(Pointer node);
//	void set_Div_right(Pointer node, Pointer right);
//	Pointer get_Div_mem(Pointer node);
//	void set_Div_mem(Pointer node, Pointer mem);
//	Pointer get_Div_resmode(Pointer node);
//	void set_Div_resmode(Pointer node, Pointer mode);
//	int is_Div_remainderless(Pointer node);
//	Pointer get_Mod_left(Pointer node);
//	void set_Mod_left(Pointer node, Pointer left);
//	Pointer get_Mod_right(Pointer node);
//	void set_Mod_right(Pointer node, Pointer right);
//	Pointer get_Mod_mem(Pointer node);
//	void set_Mod_mem(Pointer node, Pointer mem);
//	Pointer get_Mod_resmode(Pointer node);
//	void set_Mod_resmode(Pointer node, Pointer mode);
//	Pointer get_Abs_op(Pointer node);
//	void set_Abs_op(Pointer node, Pointer op);
//	Pointer get_And_left(Pointer node);
//	void set_And_left(Pointer node, Pointer left);
//	Pointer get_And_right(Pointer node);
//	void set_And_right(Pointer node, Pointer right);
//	Pointer get_Or_left(Pointer node);
//	void set_Or_left(Pointer node, Pointer left);
//	Pointer get_Or_right(Pointer node);
//	void set_Or_right(Pointer node, Pointer right);
//	Pointer get_Eor_left(Pointer node);
//	void set_Eor_left(Pointer node, Pointer left);
//	Pointer get_Eor_right(Pointer node);
//	void set_Eor_right(Pointer node, Pointer right);
//	Pointer get_Not_op(Pointer node);
//	void set_Not_op(Pointer node, Pointer op);
//	String get_pnc_string(int pnc);
//	/* pn_Cmp */int get_negated_pnc(NativeLong pnc, Pointer mode);
//	/* pn_Cmp */int get_inversed_pnc(NativeLong pnc);
//	Pointer get_Cmp_left(Pointer node);
//	void set_Cmp_left(Pointer node, Pointer left);
//	Pointer get_Cmp_right(Pointer node);
//	void set_Cmp_right(Pointer node, Pointer right);
//	Pointer get_Shl_left(Pointer node);
//	void set_Shl_left(Pointer node, Pointer left);
//	Pointer get_Shl_right(Pointer node);
//	void set_Shl_right(Pointer node, Pointer right);
//	Pointer get_Shr_left(Pointer node);
//	void set_Shr_left(Pointer node, Pointer left);
//	Pointer get_Shr_right(Pointer node);
//	void set_Shr_right(Pointer node, Pointer right);
//	Pointer get_Shrs_left(Pointer node);
//	void set_Shrs_left(Pointer node, Pointer left);
//	Pointer get_Shrs_right(Pointer node);
//	void set_Shrs_right(Pointer node, Pointer right);
//	Pointer get_Rotl_left(Pointer node);
//	void set_Rotl_left(Pointer node, Pointer left);
//	Pointer get_Rotl_right(Pointer node);
//	void set_Rotl_right(Pointer node, Pointer right);
//	Pointer get_Conv_op(Pointer node);
//	void set_Conv_op(Pointer node, Pointer op);
//	int get_Conv_strict(Pointer node);
//	void set_Conv_strict(Pointer node, int flag);
//	Pointer get_Cast_op(Pointer node);
//	void set_Cast_op(Pointer node, Pointer op);
//	Pointer get_Cast_type(Pointer node);
//	void set_Cast_type(Pointer node, Pointer to_tp);
//	int is_Cast_upcast(Pointer node);
//	int is_Cast_downcast(Pointer node);
//	int is_Phi(Pointer n);
//	int is_Phi0(Pointer n);
//	Pointer get_Phi_preds_arr(Pointer node);
//	int get_Phi_n_preds(Pointer node);
//	Pointer get_Phi_pred(Pointer node, int pos);
//	void set_Phi_pred(Pointer node, int pos, Pointer pred);
//	Pointer get_Phi_next(Pointer phi);
//	void set_Phi_next(Pointer phi, Pointer next);
//	Pointer get_Filter_pred(Pointer node);
//	void set_Filter_pred(Pointer node, Pointer pred);
//	NativeLong get_Filter_proj(Pointer node);
//	void set_Filter_proj(Pointer node, NativeLong proj);
//	void set_Filter_cg_pred_arr(Pointer node, int arity, Pointer in);
//	void set_Filter_cg_pred(Pointer node, int pos, Pointer pred);
//	int get_Filter_n_cg_preds(Pointer node);
//	Pointer get_Filter_cg_pred(Pointer node, int pos);
//	int is_memop(Pointer node);
//	Pointer get_memop_mem(Pointer node);
//	void set_memop_mem(Pointer node, Pointer mem);
//	Pointer get_memop_ptr(Pointer node);
//	void set_memop_ptr(Pointer node, Pointer ptr);
//	Pointer get_Load_mem(Pointer node);
//	void set_Load_mem(Pointer node, Pointer mem);
//	Pointer get_Load_ptr(Pointer node);
//	void set_Load_ptr(Pointer node, Pointer ptr);
//	Pointer get_Load_mode(Pointer node);
//	void set_Load_mode(Pointer node, Pointer mode);
//	/* ir_volatility */int get_Load_volatility(Pointer node);
//	void set_Load_volatility(Pointer node, /* ir_volatility */int volatility);
//	/* ir_align */int get_Load_align(Pointer node);
//	void set_Load_align(Pointer node, /* ir_align */int align);
//	Pointer get_Store_mem(Pointer node);
//	void set_Store_mem(Pointer node, Pointer mem);
//	Pointer get_Store_ptr(Pointer node);
//	void set_Store_ptr(Pointer node, Pointer ptr);
//	Pointer get_Store_value(Pointer node);
//	void set_Store_value(Pointer node, Pointer value);
//	/* ir_volatility */int get_Store_volatility(Pointer node);
//	void set_Store_volatility(Pointer node, /* ir_volatility */int volatility);
//	/* ir_align */int get_Store_align(Pointer node);
//	void set_Store_align(Pointer node, /* ir_align */int align);
//	Pointer get_Alloc_mem(Pointer node);
//	void set_Alloc_mem(Pointer node, Pointer mem);
//	Pointer get_Alloc_size(Pointer node);
//	void set_Alloc_size(Pointer node, Pointer size);
//	Pointer get_Alloc_type(Pointer node);
//	void set_Alloc_type(Pointer node, Pointer tp);
//	/* ir_where_alloc */int get_Alloc_where(Pointer node);
//	void set_Alloc_where(Pointer node, /* ir_where_alloc */int where);
//	Pointer get_Free_mem(Pointer node);
//	void set_Free_mem(Pointer node, Pointer mem);
//	Pointer get_Free_ptr(Pointer node);
//	void set_Free_ptr(Pointer node, Pointer ptr);
//	Pointer get_Free_size(Pointer node);
//	void set_Free_size(Pointer node, Pointer size);
//	Pointer get_Free_type(Pointer node);
//	void set_Free_type(Pointer node, Pointer tp);
//	/* ir_where_alloc */int get_Free_where(Pointer node);
//	void set_Free_where(Pointer node, /* ir_where_alloc */int where);
//	Pointer get_Sync_preds_arr(Pointer node);
//	int get_Sync_n_preds(Pointer node);
//	Pointer get_Sync_pred(Pointer node, int pos);
//	void set_Sync_pred(Pointer node, int pos, Pointer pred);
//	void add_Sync_pred(Pointer node, Pointer pred);
//	Pointer get_Proj_type(Pointer node);
//	Pointer get_Proj_pred(Pointer node);
//	void set_Proj_pred(Pointer node, Pointer pred);
//	NativeLong get_Proj_proj(Pointer node);
//	void set_Proj_proj(Pointer node, NativeLong proj);
//	int is_arg_Proj(Pointer node);
//	Pointer get_Tuple_preds_arr(Pointer node);
//	int get_Tuple_n_preds(Pointer node);
//	Pointer get_Tuple_pred(Pointer node, int pos);
//	void set_Tuple_pred(Pointer node, int pos, Pointer pred);
//	Pointer get_Id_pred(Pointer node);
//	void set_Id_pred(Pointer node, Pointer pred);
//	Pointer get_Confirm_value(Pointer node);
//	void set_Confirm_value(Pointer node, Pointer value);
//	Pointer get_Confirm_bound(Pointer node);
//	void set_Confirm_bound(Pointer node, Pointer bound);
//	/* pn_Cmp */int get_Confirm_cmp(Pointer node);
//	void set_Confirm_cmp(Pointer node, /* pn_Cmp */int cmp);
//	Pointer get_Mux_sel(Pointer node);
//	void set_Mux_sel(Pointer node, Pointer sel);
//	Pointer get_Mux_false(Pointer node);
//	void set_Mux_false(Pointer node, Pointer ir_false);
//	Pointer get_Mux_true(Pointer node);
//	void set_Mux_true(Pointer node, Pointer ir_true);
//	Pointer get_CopyB_mem(Pointer node);
//	void set_CopyB_mem(Pointer node, Pointer mem);
//	Pointer get_CopyB_dst(Pointer node);
//	void set_CopyB_dst(Pointer node, Pointer dst);
//	Pointer get_CopyB_src(Pointer node);
//	void set_CopyB_src(Pointer node, Pointer src);
//	Pointer get_CopyB_type(Pointer node);
//	void set_CopyB_type(Pointer node, Pointer data_type);
//	Pointer get_InstOf_type(Pointer node);
//	void set_InstOf_type(Pointer node, Pointer type);
//	Pointer get_InstOf_store(Pointer node);
//	void set_InstOf_store(Pointer node, Pointer obj);
//	Pointer get_InstOf_obj(Pointer node);
//	void set_InstOf_obj(Pointer node, Pointer obj);
//	Pointer get_Raise_mem(Pointer node);
//	void set_Raise_mem(Pointer node, Pointer mem);
//	Pointer get_Raise_exo_ptr(Pointer node);
//	void set_Raise_exo_ptr(Pointer node, Pointer exoptr);
//	Pointer get_Bound_mem(Pointer bound);
//	void set_Bound_mem(Pointer bound, Pointer mem);
//	Pointer get_Bound_index(Pointer bound);
//	void set_Bound_index(Pointer bound, Pointer idx);
//	Pointer get_Bound_lower(Pointer bound);
//	void set_Bound_lower(Pointer bound, Pointer lower);
//	Pointer get_Bound_upper(Pointer bound);
//	void set_Bound_upper(Pointer bound, Pointer upper);
//	Pointer get_Pin_op(Pointer pin);
//	void set_Pin_op(Pointer pin, Pointer node);
//	Pointer get_ASM_text(Pointer node);
//	int get_ASM_n_input_constraints(Pointer node);
//	Pointer get_ASM_input_constraints(Pointer node);
//	int get_ASM_n_output_constraints(Pointer node);
//	Pointer get_ASM_output_constraints(Pointer node);
//	int get_ASM_n_clobbers(Pointer node);
//	Pointer get_ASM_clobbers(Pointer node);
//	Pointer skip_Proj(Pointer node);
//	Pointer skip_Proj_const(Pointer node);
//	Pointer skip_Id(Pointer node);
//	Pointer skip_Tuple(Pointer node);
//	Pointer skip_Cast(Pointer node);
//	Pointer skip_Cast_const(Pointer node);
//	Pointer skip_Pin(Pointer node);
//	Pointer skip_Confirm(Pointer node);
//	Pointer skip_HighLevel_ops(Pointer node);
//	int is_Const(Pointer node);
//	int is_Conv(Pointer node);
//	int is_strictConv(Pointer node);
//	int is_Cast(Pointer node);
//	int is_Bad(Pointer node);
//	int is_NoMem(Pointer node);
//	int is_Start(Pointer node);
//	int is_Minus(Pointer node);
//	int is_Abs(Pointer node);
//	int is_Mod(Pointer node);
//	int is_Div(Pointer node);
//	int is_DivMod(Pointer node);
//	int is_Quot(Pointer node);
//	int is_Add(Pointer node);
//	int is_Carry(Pointer node);
//	int is_And(Pointer node);
//	int is_Or(Pointer node);
//	int is_Eor(Pointer node);
//	int is_Sub(Pointer node);
//	int is_Not(Pointer node);
//	int is_Shl(Pointer node);
//	int is_Shr(Pointer node);
//	int is_Shrs(Pointer node);
//	int is_Rotl(Pointer node);
//	int is_Id(Pointer node);
//	int is_Tuple(Pointer node);
//	int is_Bound(Pointer node);
//	int is_no_Block(Pointer node);
//	int is_Block(Pointer node);
//	int is_Unknown(Pointer node);
//	int is_Return(Pointer node);
//	int is_Call(Pointer node);
//	int is_CallBegin(Pointer node);
//	int is_Sel(Pointer node);
//	int is_Mul(Pointer node);
//	int is_Mulh(Pointer node);
//	int is_Mux(Pointer node);
//	int is_Load(Pointer node);
//	int is_Store(Pointer node);
//	int is_Sync(Pointer node);
//	int is_Confirm(Pointer node);
//	int is_Pin(Pointer node);
//	int is_SymConst(Pointer node);
//	int is_SymConst_addr_ent(Pointer node);
//	int is_Cond(Pointer node);
//	int is_CopyB(Pointer node);
//	int is_Cmp(Pointer node);
//	int is_Alloc(Pointer node);
//	int is_Free(Pointer node);
//	int is_Jmp(Pointer node);
//	int is_IJmp(Pointer node);
//	int is_Raise(Pointer node);
//	int is_ASM(Pointer node);
//	int is_Proj(Pointer node);
//	int is_Filter(Pointer node);
//	int is_cfop(Pointer node);
//	int is_ip_cfop(Pointer node);
//	int is_fragile_op(Pointer node);
//	Pointer get_fragile_op_mem(Pointer node);
//	Pointer get_divop_resmod(Pointer node);
//	int is_irn_forking(Pointer node);
//	Pointer get_irn_type(Pointer n);
//	Pointer get_irn_type_attr(Pointer n);
//	Pointer get_irn_entity_attr(Pointer n);
//	int is_irn_constlike(Pointer node);
//	int is_irn_always_opt(Pointer node);
//	int is_irn_keep(Pointer node);
//	int is_irn_start_block_placed(Pointer node);
//	int is_irn_machine_op(Pointer node);
//	int is_irn_machine_operand(Pointer node);
//	int is_irn_machine_user(Pointer node, int n);
//	String get_cond_jmp_predicate_name(/* cond_jmp_predicate */int pred);
//	/* cond_jmp_predicate */int get_Cond_jmp_pred(Pointer cond);
//	void set_Cond_jmp_pred(Pointer cond, /* cond_jmp_predicate */int pred);
//	int is_Global(Pointer node);
//	Pointer get_Global_entity(Pointer node);
//	int firm_register_additional_node_data(int size);
//	Pointer get_irn_generic_attr(Pointer node);
//	Pointer get_irn_generic_attr_const(Pointer node);
//	int get_irn_idx(Pointer node);
//	void set_irn_dbg_info(Pointer n, Pointer db);
//	Pointer get_irn_dbg_info(Pointer n);
//	int firm_default_hash(Pointer node);
//	Pointer new_tarval_from_str(String str, NativeLong len, Pointer mode);
//	Pointer new_tarval_from_long(NativeLong l, Pointer mode);
//	NativeLong get_tarval_long(Pointer tv);
//	int tarval_is_long(Pointer tv);
//	Pointer new_tarval_from_double(double d, Pointer mode);
//	double get_tarval_double(Pointer tv);
//	int tarval_is_double(Pointer tv);
//	Pointer get_tarval_mode(Pointer tv);
//	int tarval_is_negative(Pointer tv);
//	int tarval_is_null(Pointer tv);
//	int tarval_is_one(Pointer tv);
//	int tarval_is_minus_one(Pointer tv);
//	int tarval_is_all_one(Pointer tv);
//	int tarval_is_constant(Pointer tv);
//	Pointer get_tarval_bad();
//	Pointer get_tarval_undefined();
//	Pointer get_tarval_b_false();
//	Pointer get_tarval_b_true();
//	Pointer get_tarval_unreachable();
//	Pointer get_tarval_reachable();
//	Pointer get_tarval_max(Pointer mode);
//	Pointer get_tarval_min(Pointer mode);
//	Pointer get_tarval_null(Pointer mode);
//	Pointer get_tarval_one(Pointer mode);
//	Pointer get_tarval_minus_one(Pointer mode);
//	Pointer get_tarval_all_one(Pointer mode);
//	Pointer get_tarval_nan(Pointer mode);
//	Pointer get_tarval_plus_inf(Pointer mode);
//	Pointer get_tarval_minus_inf(Pointer mode);
//	void tarval_set_integer_overflow_mode(/* tarval_int_overflow_mode_t */int ov_mode);
//	/* tarval_int_overflow_mode_t */int tarval_get_integer_overflow_mode();
//	/* pn_Cmp */int tarval_cmp(Pointer a, Pointer b);
//	Pointer tarval_convert_to(Pointer src, Pointer mode);
//	Pointer tarval_not(Pointer a);
//	Pointer tarval_neg(Pointer a);
//	Pointer tarval_add(Pointer a, Pointer b);
//	Pointer tarval_sub(Pointer a, Pointer b, Pointer dst_mode);
//	Pointer tarval_mul(Pointer a, Pointer b);
//	Pointer tarval_quo(Pointer a, Pointer b);
//	Pointer tarval_div(Pointer a, Pointer b);
//	Pointer tarval_mod(Pointer a, Pointer b);
//	Pointer tarval_divmod(Pointer a, Pointer b, Pointer mod_res);
//	Pointer tarval_abs(Pointer a);
//	Pointer tarval_and(Pointer a, Pointer b);
//	Pointer tarval_or(Pointer a, Pointer b);
//	Pointer tarval_eor(Pointer a, Pointer b);
//	Pointer tarval_shl(Pointer a, Pointer b);
//	Pointer tarval_shr(Pointer a, Pointer b);
//	Pointer tarval_shrs(Pointer a, Pointer b);
//	Pointer tarval_rotl(Pointer a, Pointer b);
//	int tarval_carry();
//	int set_tarval_mode_output_option(Pointer mode, Pointer modeinfo);
//	Pointer get_tarval_mode_output_option(Pointer mode);
//	String get_tarval_bitpattern(Pointer tv);
//	byte get_tarval_sub_bits(Pointer tv, int byte_ofs);
//	int tarval_is_single_bit(Pointer tv);
//	int tarval_snprintf(String buf, NativeLong buflen, Pointer tv);
//	int tarval_printf(Pointer tv);
//	int tarval_ieee754_zero_mantissa(Pointer tv);
//	int tarval_ieee754_get_exponent(Pointer tv);
//	int tarval_ieee754_can_conv_lossless(Pointer tv, Pointer mode);
//	int tarval_ieee754_set_immediate_precision(int bits);
//	int tarval_ieee754_get_exact();
//	int tarval_ieee754_get_mantissa_size(Pointer mode);
//	int tarval_enable_fp_ops(int enable);
//	int tarval_is_NaN(Pointer tv);
//	int tarval_is_plus_inf(Pointer tv);
//	int tarval_is_minus_inf(Pointer tv);
//	int tarval_is_finite(Pointer tv);
//	int is_tarval(Pointer thing);
//	Pointer new_rd_Block(Pointer db, Pointer irg, int arity, Pointer in);
//	Pointer new_rd_Start(Pointer db, Pointer irg, Pointer block);
//	Pointer new_rd_End(Pointer db, Pointer irg, Pointer block);
//	Pointer new_rd_Jmp(Pointer db, Pointer irg, Pointer block);
//	Pointer new_rd_IJmp(Pointer db, Pointer irg, Pointer block, Pointer tgt);
//	Pointer new_rd_Break(Pointer db, Pointer irg, Pointer block);
//	Pointer new_rd_Cond(Pointer db, Pointer irg, Pointer block, Pointer c);
//	Pointer new_rd_Return(Pointer db, Pointer irg, Pointer block, Pointer store, int arity, Pointer in);
//	Pointer new_rd_Const_type(Pointer db, Pointer irg, Pointer con, Pointer tp);
//	Pointer new_rd_Const(Pointer db, Pointer irg, Pointer con);
//	Pointer new_rd_Const_long(Pointer db, Pointer irg, Pointer mode, NativeLong value);
////	Pointer new_rd_SymConst_type(Pointer db, Pointer irg, Pointer block, Pointer mode, symconst_symbol value, /* symconst_kind */int symkind, Pointer tp);
////	Pointer new_rd_SymConst(Pointer db, Pointer irg, Pointer block, Pointer mode, symconst_symbol value, /* symconst_kind */int symkind);
//	Pointer new_rd_SymConst_addr_ent(Pointer db, Pointer irg, Pointer mode, Pointer symbol, Pointer tp);
//	Pointer new_rd_SymConst_ofs_ent(Pointer db, Pointer irg, Pointer mode, Pointer symbol, Pointer tp);
//	Pointer new_rd_SymConst_addr_name(Pointer db, Pointer irg, Pointer mode, Pointer symbol, Pointer tp);
//	Pointer new_rd_SymConst_type_tag(Pointer db, Pointer irg, Pointer mode, Pointer symbol, Pointer tp);
//	Pointer new_rd_SymConst_size(Pointer db, Pointer irg, Pointer mode, Pointer symbol, Pointer tp);
//	Pointer new_rd_SymConst_align(Pointer db, Pointer irg, Pointer mode, Pointer symbol, Pointer tp);
//	Pointer new_rd_simpleSel(Pointer db, Pointer irg, Pointer block, Pointer store, Pointer objptr, Pointer ent);
//	Pointer new_rd_Sel(Pointer db, Pointer irg, Pointer block, Pointer store, Pointer objptr, int n_index, Pointer index, Pointer ent);
//	Pointer new_rd_Call(Pointer db, Pointer irg, Pointer block, Pointer store, Pointer callee, int arity, Pointer in, Pointer tp);
//	Pointer new_rd_Add(Pointer db, Pointer irg, Pointer block, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_rd_Sub(Pointer db, Pointer irg, Pointer block, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_rd_Minus(Pointer db, Pointer irg, Pointer block, Pointer op, Pointer mode);
//	Pointer new_rd_Mul(Pointer db, Pointer irg, Pointer block, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_rd_Mulh(Pointer db, Pointer irg, Pointer block, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_rd_Quot(Pointer db, Pointer irg, Pointer block, Pointer memop, Pointer op1, Pointer op2, Pointer mode, /* op_pin_state */int state);
//	Pointer new_rd_DivMod(Pointer db, Pointer irg, Pointer block, Pointer memop, Pointer op1, Pointer op2, Pointer mode, /* op_pin_state */int state);
//	Pointer new_rd_Div(Pointer db, Pointer irg, Pointer block, Pointer memop, Pointer op1, Pointer op2, Pointer mode, /* op_pin_state */int state);
//	Pointer new_rd_DivRL(Pointer db, Pointer irg, Pointer block, Pointer memop, Pointer op1, Pointer op2, Pointer mode, /* op_pin_state */int state);
//	Pointer new_rd_Mod(Pointer db, Pointer irg, Pointer block, Pointer memop, Pointer op1, Pointer op2, Pointer mode, /* op_pin_state */int state);
//	Pointer new_rd_Abs(Pointer db, Pointer irg, Pointer block, Pointer op, Pointer mode);
//	Pointer new_rd_And(Pointer db, Pointer irg, Pointer block, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_rd_Or(Pointer db, Pointer irg, Pointer block, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_rd_Eor(Pointer db, Pointer irg, Pointer block, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_rd_Not(Pointer db, Pointer irg, Pointer block, Pointer op, Pointer mode);
//	Pointer new_rd_Cmp(Pointer db, Pointer irg, Pointer block, Pointer op1, Pointer op2);
//	Pointer new_rd_Shl(Pointer db, Pointer irg, Pointer block, Pointer op, Pointer k, Pointer mode);
//	Pointer new_rd_Shr(Pointer db, Pointer irg, Pointer block, Pointer op, Pointer k, Pointer mode);
//	Pointer new_rd_Shrs(Pointer db, Pointer irg, Pointer block, Pointer op, Pointer k, Pointer mode);
//	Pointer new_rd_Rotl(Pointer db, Pointer irg, Pointer block, Pointer op, Pointer k, Pointer mode);
//	Pointer new_rd_Conv(Pointer db, Pointer irg, Pointer block, Pointer op, Pointer mode);
//	Pointer new_rd_Cast(Pointer db, Pointer irg, Pointer block, Pointer op, Pointer to_tp);
//	Pointer new_rd_Carry(Pointer db, Pointer irg, Pointer block, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_rd_Borrow(Pointer db, Pointer irg, Pointer block, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_rd_Phi(Pointer db, Pointer irg, Pointer block, int arity, Pointer in, Pointer mode);
//	Pointer new_rd_Load(Pointer db, Pointer irg, Pointer block, Pointer store, Pointer adr, Pointer mode);
//	Pointer new_rd_Store(Pointer db, Pointer irg, Pointer block, Pointer store, Pointer adr, Pointer val);
//	Pointer new_rd_Alloc(Pointer db, Pointer irg, Pointer block, Pointer store, Pointer size, Pointer alloc_type, /* ir_where_alloc */int where);
//	Pointer new_rd_Free(Pointer db, Pointer irg, Pointer block, Pointer store, Pointer ptr, Pointer size, Pointer free_type, /* ir_where_alloc */int where);
//	Pointer new_rd_Sync(Pointer db, Pointer irg, Pointer block, int arity, Pointer in);
//	Pointer new_rd_Proj(Pointer db, Pointer irg, Pointer block, Pointer arg, Pointer mode, NativeLong proj);
//	Pointer new_rd_defaultProj(Pointer db, Pointer irg, Pointer block, Pointer arg, NativeLong max_proj);
//	Pointer new_rd_Tuple(Pointer db, Pointer irg, Pointer block, int arity, Pointer in);
//	Pointer new_rd_Id(Pointer db, Pointer irg, Pointer block, Pointer val, Pointer mode);
//	Pointer new_rd_Confirm(Pointer db, Pointer irg, Pointer block, Pointer val, Pointer bound, /* pn_Cmp */int cmp);
//	Pointer new_rd_Unknown(Pointer irg, Pointer m);
//	Pointer new_rd_CallBegin(Pointer db, Pointer irg, Pointer block, Pointer callee);
//	Pointer new_rd_EndReg(Pointer db, Pointer irg, Pointer block);
//	Pointer new_rd_EndExcept(Pointer db, Pointer irg, Pointer block);
//	Pointer new_rd_Filter(Pointer db, Pointer irg, Pointer block, Pointer arg, Pointer mode, NativeLong proj);
//	Pointer new_rd_Mux(Pointer db, Pointer irg, Pointer block, Pointer sel, Pointer ir_false, Pointer ir_true, Pointer mode);
//	Pointer new_rd_CopyB(Pointer db, Pointer irg, Pointer block, Pointer store, Pointer dst, Pointer src, Pointer data_type);
//	Pointer new_rd_InstOf(Pointer db, Pointer irg, Pointer block, Pointer store, Pointer objptr, Pointer type);
//	Pointer new_rd_Raise(Pointer db, Pointer irg, Pointer block, Pointer store, Pointer obj);
//	Pointer new_rd_Bound(Pointer db, Pointer irg, Pointer block, Pointer store, Pointer idx, Pointer lower, Pointer upper);
//	Pointer new_rd_Pin(Pointer db, Pointer irg, Pointer block, Pointer node);
//	Pointer new_rd_ASM(Pointer db, Pointer irg, Pointer block, int arity, Pointer in, Pointer inputs, int n_outs, Pointer outputs, int n_clobber, Pointer clobber, Pointer asm_text);
//	Pointer new_r_Block(Pointer irg, int arity, Pointer in);
//	Pointer new_r_Start(Pointer irg, Pointer block);
//	Pointer new_r_End(Pointer irg, Pointer block);
//	Pointer new_r_Jmp(Pointer irg, Pointer block);
//	Pointer new_r_IJmp(Pointer irg, Pointer block, Pointer tgt);
//	Pointer new_r_Cond(Pointer irg, Pointer block, Pointer c);
//	Pointer new_r_Return(Pointer irg, Pointer block, Pointer store, int arity, Pointer in);
//	Pointer new_r_Const(Pointer irg, Pointer con);
//	Pointer new_r_Const_long(Pointer irg, Pointer mode, NativeLong value);
//	Pointer new_r_Const_type(Pointer irg, Pointer con, Pointer tp);
////	Pointer new_r_SymConst(Pointer irg, Pointer block, Pointer mode, symconst_symbol value, /* symconst_kind */int symkind);
////	Pointer new_r_simpleSel(Pointer irg, Pointer block, Pointer store, Pointer objptr, Pointer ent);
//	Pointer new_r_Sel(Pointer irg, Pointer block, Pointer store, Pointer objptr, int n_index, Pointer index, Pointer ent);
//	Pointer new_r_Call(Pointer irg, Pointer block, Pointer store, Pointer callee, int arity, Pointer in, Pointer tp);
//	Pointer new_r_Add(Pointer irg, Pointer block, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_r_Sub(Pointer irg, Pointer block, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_r_Minus(Pointer irg, Pointer block, Pointer op, Pointer mode);
//	Pointer new_r_Mul(Pointer irg, Pointer block, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_r_Mulh(Pointer irg, Pointer block, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_r_Quot(Pointer irg, Pointer block, Pointer memop, Pointer op1, Pointer op2, Pointer mode, /* op_pin_state */int state);
//	Pointer new_r_DivMod(Pointer irg, Pointer block, Pointer memop, Pointer op1, Pointer op2, Pointer mode, /* op_pin_state */int state);
//	Pointer new_r_Div(Pointer irg, Pointer block, Pointer memop, Pointer op1, Pointer op2, Pointer mode, /* op_pin_state */int state);
//	Pointer new_r_DivRL(Pointer irg, Pointer block, Pointer memop, Pointer op1, Pointer op2, Pointer mode, /* op_pin_state */int state);
//	Pointer new_r_Mod(Pointer irg, Pointer block, Pointer memop, Pointer op1, Pointer op2, Pointer mode, /* op_pin_state */int state);
//	Pointer new_r_Abs(Pointer irg, Pointer block, Pointer op, Pointer mode);
//	Pointer new_r_And(Pointer irg, Pointer block, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_r_Or(Pointer irg, Pointer block, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_r_Eor(Pointer irg, Pointer block, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_r_Not(Pointer irg, Pointer block, Pointer op, Pointer mode);
//	Pointer new_r_Cmp(Pointer irg, Pointer block, Pointer op1, Pointer op2);
//	Pointer new_r_Shl(Pointer irg, Pointer block, Pointer op, Pointer k, Pointer mode);
//	Pointer new_r_Shr(Pointer irg, Pointer block, Pointer op, Pointer k, Pointer mode);
//	Pointer new_r_Shrs(Pointer irg, Pointer block, Pointer op, Pointer k, Pointer mode);
//	Pointer new_r_Rotl(Pointer irg, Pointer block, Pointer op, Pointer k, Pointer mode);
//	Pointer new_r_Conv(Pointer irg, Pointer block, Pointer op, Pointer mode);
//	Pointer new_r_Cast(Pointer irg, Pointer block, Pointer op, Pointer to_tp);
//	Pointer new_r_Carry(Pointer irg, Pointer block, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_r_Borrow(Pointer irg, Pointer block, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_r_Phi(Pointer irg, Pointer block, int arity, Pointer in, Pointer mode);
//	Pointer new_r_Load(Pointer irg, Pointer block, Pointer store, Pointer adr, Pointer mode);
//	Pointer new_r_Store(Pointer irg, Pointer block, Pointer store, Pointer adr, Pointer val);
//	Pointer new_r_Alloc(Pointer irg, Pointer block, Pointer store, Pointer size, Pointer alloc_type, /* ir_where_alloc */int where);
//	Pointer new_r_Free(Pointer irg, Pointer block, Pointer store, Pointer ptr, Pointer size, Pointer free_type, /* ir_where_alloc */int where);
//	Pointer new_r_Sync(Pointer irg, Pointer block, int arity, Pointer in);
//	Pointer new_r_Proj(Pointer irg, Pointer block, Pointer arg, Pointer mode, NativeLong proj);
//	Pointer new_r_defaultProj(Pointer irg, Pointer block, Pointer arg, NativeLong max_proj);
//	Pointer new_r_Tuple(Pointer irg, Pointer block, int arity, Pointer in);
//	Pointer new_r_Id(Pointer irg, Pointer block, Pointer val, Pointer mode);
//	Pointer new_r_Bad(Pointer irg);
//	Pointer new_r_Confirm(Pointer irg, Pointer block, Pointer val, Pointer bound, /* pn_Cmp */int cmp);
//	Pointer new_r_Unknown(Pointer irg, Pointer m);
//	Pointer new_r_CallBegin(Pointer irg, Pointer block, Pointer callee);
//	Pointer new_r_EndReg(Pointer irg, Pointer block);
//	Pointer new_r_EndExcept(Pointer irg, Pointer block);
//	Pointer new_r_Break(Pointer irg, Pointer block);
//	Pointer new_r_Filter(Pointer irg, Pointer block, Pointer arg, Pointer mode, NativeLong proj);
//	Pointer new_r_NoMem(Pointer irg);
//	Pointer new_r_Mux(Pointer irg, Pointer block, Pointer sel, Pointer ir_false, Pointer ir_true, Pointer mode);
//	Pointer new_r_CopyB(Pointer irg, Pointer block, Pointer store, Pointer dst, Pointer src, Pointer data_type);
//	Pointer new_r_InstOf(Pointer irg, Pointer block, Pointer store, Pointer objptr, Pointer type);
//	Pointer new_r_Raise(Pointer irg, Pointer block, Pointer store, Pointer obj);
//	Pointer new_r_Bound(Pointer irg, Pointer block, Pointer store, Pointer idx, Pointer lower, Pointer upper);
//	Pointer new_r_Pin(Pointer irg, Pointer block, Pointer node);
//	Pointer new_r_ASM(Pointer irg, Pointer block, int arity, Pointer in, Pointer inputs, int n_outs, Pointer outputs, int n_clobber, Pointer clobber, Pointer asm_text);
//	void set_cur_block(Pointer target);
//	Pointer get_cur_block();
//	Pointer new_d_Block(Pointer db, int arity, Pointer in);
//	Pointer new_d_Start(Pointer db);
//	Pointer new_d_End(Pointer db);
//	Pointer new_d_Jmp(Pointer db);
//	Pointer new_d_IJmp(Pointer db, Pointer tgt);
//	Pointer new_d_Cond(Pointer db, Pointer c);
//	Pointer new_d_Return(Pointer db, Pointer store, int arity, Pointer in);
//	Pointer new_d_Const_type(Pointer db, Pointer con, Pointer tp);
//	Pointer new_d_Const(Pointer db, Pointer con);
////	Pointer new_d_SymConst_type(Pointer db, Pointer mode, symconst_symbol value, /* symconst_kind */int kind, Pointer tp);
////	Pointer new_d_SymConst(Pointer db, Pointer mode, symconst_symbol value, /* symconst_kind */int kind);
//	Pointer new_d_simpleSel(Pointer db, Pointer store, Pointer objptr, Pointer ent);
//	Pointer new_d_Sel(Pointer db, Pointer store, Pointer objptr, int arity, Pointer in, Pointer ent);
//	Pointer new_d_Call(Pointer db, Pointer store, Pointer callee, int arity, Pointer in, Pointer tp);
//	Pointer new_d_Add(Pointer db, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_d_Sub(Pointer db, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_d_Minus(Pointer db, Pointer op, Pointer mode);
//	Pointer new_d_Mul(Pointer db, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_d_Mulh(Pointer db, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_d_Quot(Pointer db, Pointer memop, Pointer op1, Pointer op2, Pointer mode, /* op_pin_state */int state);
//	Pointer new_d_DivMod(Pointer db, Pointer memop, Pointer op1, Pointer op2, Pointer mode, /* op_pin_state */int state);
//	Pointer new_d_Div(Pointer db, Pointer memop, Pointer op1, Pointer op2, Pointer mode, /* op_pin_state */int state);
//	Pointer new_d_DivRL(Pointer db, Pointer memop, Pointer op1, Pointer op2, Pointer mode, /* op_pin_state */int state);
//	Pointer new_d_Mod(Pointer db, Pointer memop, Pointer op1, Pointer op2, Pointer mode, /* op_pin_state */int state);
//	Pointer new_d_Abs(Pointer db, Pointer op, Pointer mode);
//	Pointer new_d_And(Pointer db, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_d_Or(Pointer db, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_d_Eor(Pointer db, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_d_Not(Pointer db, Pointer op, Pointer mode);
//	Pointer new_d_Shl(Pointer db, Pointer op, Pointer k, Pointer mode);
//	Pointer new_d_Shr(Pointer db, Pointer op, Pointer k, Pointer mode);
//	Pointer new_d_Shrs(Pointer db, Pointer op, Pointer k, Pointer mode);
//	Pointer new_d_Rotl(Pointer db, Pointer op, Pointer k, Pointer mode);
//	Pointer new_d_Cmp(Pointer db, Pointer op1, Pointer op2);
//	Pointer new_d_Conv(Pointer db, Pointer op, Pointer mode);
//	Pointer new_d_strictConv(Pointer db, Pointer op, Pointer mode);
//	Pointer new_d_Cast(Pointer db, Pointer op, Pointer to_tp);
//	Pointer new_d_Carry(Pointer db, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_d_Borrow(Pointer db, Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_d_Phi(Pointer db, int arity, Pointer in, Pointer mode);
//	Pointer new_d_Load(Pointer db, Pointer store, Pointer addr, Pointer mode);
//	Pointer new_d_Store(Pointer db, Pointer store, Pointer addr, Pointer val);
//	Pointer new_d_Alloc(Pointer db, Pointer store, Pointer size, Pointer alloc_type, /* ir_where_alloc */int where);
//	Pointer new_d_Free(Pointer db, Pointer store, Pointer ptr, Pointer size, Pointer free_type, /* ir_where_alloc */int where);
//	Pointer new_d_Sync(Pointer db, int arity, Pointer in);
//	Pointer new_d_Proj(Pointer db, Pointer arg, Pointer mode, NativeLong proj);
//	Pointer new_d_defaultProj(Pointer db, Pointer arg, NativeLong max_proj);
//	Pointer new_d_Tuple(Pointer db, int arity, Pointer in);
//	Pointer new_d_Id(Pointer db, Pointer val, Pointer mode);
//	Pointer new_d_Confirm(Pointer db, Pointer val, Pointer bound, /* pn_Cmp */int cmp);
//	Pointer new_d_Unknown(Pointer m);
//	Pointer new_d_CallBegin(Pointer db, Pointer callee);
//	Pointer new_d_EndReg(Pointer db);
//	Pointer new_d_EndExcept(Pointer db);
//	Pointer new_d_Break(Pointer db);
//	Pointer new_d_Filter(Pointer db, Pointer arg, Pointer mode, NativeLong proj);
//	Pointer new_d_Mux(Pointer db, Pointer sel, Pointer ir_false, Pointer ir_true, Pointer mode);
//	Pointer new_d_CopyB(Pointer db, Pointer store, Pointer dst, Pointer src, Pointer data_type);
//	Pointer new_d_InstOf(Pointer db, Pointer store, Pointer objptr, Pointer type);
//	Pointer new_d_Raise(Pointer db, Pointer store, Pointer obj);
//	Pointer new_d_Bound(Pointer db, Pointer store, Pointer idx, Pointer lower, Pointer upper);
//	Pointer new_d_Pin(Pointer db, Pointer node);
//	Pointer new_d_ASM(Pointer db, int arity, Pointer in, Pointer inputs, int n_outs, Pointer outputs, int n_clobber, Pointer clobber, Pointer asm_text);
//	Pointer new_Block(int arity, Pointer in);
//	Pointer new_Start();
//	Pointer new_End();
//	Pointer new_EndReg();
//	Pointer new_EndExcept();
//	Pointer new_Jmp();
//	Pointer new_IJmp(Pointer tgt);
//	Pointer new_Break();
//	Pointer new_Cond(Pointer c);
//	Pointer new_Return(Pointer store, int arity, Pointer in);
//	Pointer new_Const(Pointer con);
//	Pointer new_Const_long(Pointer mode, NativeLong value);
//	Pointer new_Const_type(Pointer con, Pointer tp);
////	Pointer new_SymConst_type(Pointer mode, symconst_symbol value, /* symconst_kind */int kind, Pointer tp);
////	Pointer new_SymConst(Pointer mode, symconst_symbol value, /* symconst_kind */int kind);
//	Pointer new_simpleSel(Pointer store, Pointer objptr, Pointer ent);
//	Pointer new_Sel(Pointer store, Pointer objptr, int arity, Pointer in, Pointer ent);
//	Pointer new_Call(Pointer store, Pointer callee, int arity, Pointer in, Pointer tp);
//	Pointer new_CallBegin(Pointer callee);
//	Pointer new_Add(Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_Sub(Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_Minus(Pointer op, Pointer mode);
//	Pointer new_Mul(Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_Mulh(Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_Quot(Pointer memop, Pointer op1, Pointer op2, Pointer mode, /* op_pin_state */int state);
//	Pointer new_DivMod(Pointer memop, Pointer op1, Pointer op2, Pointer mode, /* op_pin_state */int state);
//	Pointer new_Div(Pointer memop, Pointer op1, Pointer op2, Pointer mode, /* op_pin_state */int state);
//	Pointer new_DivRL(Pointer memop, Pointer op1, Pointer op2, Pointer mode, /* op_pin_state */int state);
//	Pointer new_Mod(Pointer memop, Pointer op1, Pointer op2, Pointer mode, /* op_pin_state */int state);
//	Pointer new_Abs(Pointer op, Pointer mode);
//	Pointer new_And(Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_Or(Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_Eor(Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_Not(Pointer op, Pointer mode);
//	Pointer new_Shl(Pointer op, Pointer k, Pointer mode);
//	Pointer new_Shr(Pointer op, Pointer k, Pointer mode);
//	Pointer new_Shrs(Pointer op, Pointer k, Pointer mode);
//	Pointer new_Rotl(Pointer op, Pointer k, Pointer mode);
//	Pointer new_Cmp(Pointer op1, Pointer op2);
//	Pointer new_Conv(Pointer op, Pointer mode);
//	Pointer new_strictConv(Pointer op, Pointer mode);
//	Pointer new_Cast(Pointer op, Pointer to_tp);
//	Pointer new_Carry(Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_Borrow(Pointer op1, Pointer op2, Pointer mode);
//	Pointer new_Phi(int arity, Pointer in, Pointer mode);
//	Pointer new_Load(Pointer store, Pointer addr, Pointer mode);
//	Pointer new_Store(Pointer store, Pointer addr, Pointer val);
//	Pointer new_Alloc(Pointer store, Pointer size, Pointer alloc_type, /* ir_where_alloc */int where);
//	Pointer new_Free(Pointer store, Pointer ptr, Pointer size, Pointer free_type, /* ir_where_alloc */int where);
//	Pointer new_Sync(int arity, Pointer in);
//	Pointer new_Proj(Pointer arg, Pointer mode, NativeLong proj);
//	Pointer new_Filter(Pointer arg, Pointer mode, NativeLong proj);
//	Pointer new_defaultProj(Pointer arg, NativeLong max_proj);
//	Pointer new_Tuple(int arity, Pointer in);
//	Pointer new_Id(Pointer val, Pointer mode);
//	Pointer new_Bad();
//	Pointer new_Confirm(Pointer val, Pointer bound, /* pn_Cmp */int cmp);
//	Pointer new_Unknown(Pointer m);
//	Pointer new_NoMem();
//	Pointer new_Mux(Pointer sel, Pointer ir_false, Pointer ir_true, Pointer mode);
//	Pointer new_CopyB(Pointer store, Pointer dst, Pointer src, Pointer data_type);
//	Pointer new_InstOf(Pointer store, Pointer objptr, Pointer type);
//	Pointer new_Raise(Pointer store, Pointer obj);
//	Pointer new_Bound(Pointer store, Pointer idx, Pointer lower, Pointer upper);
//	Pointer new_Pin(Pointer node);
//	Pointer new_ASM(int arity, Pointer in, Pointer inputs, int n_outs, Pointer outputs, int n_clobber, Pointer clobber, Pointer asm_text);
//	Pointer new_d_immBlock(Pointer db);
//	Pointer new_immBlock();
//	Pointer new_d_immPartBlock(Pointer db, Pointer pred_jmp);
//	Pointer new_immPartBlock(Pointer pred_jmp);
//	void add_immBlock_pred(Pointer immblock, Pointer jmp);
//	void mature_immBlock(Pointer block);
//	Pointer get_d_value(Pointer db, int pos, Pointer mode);
//	Pointer get_value(int pos, Pointer mode);
//	void set_value(int pos, Pointer value);
//	int find_value(Pointer value);
//	Pointer get_store();
//	void set_store(Pointer store);
//	void keep_alive(Pointer ka);
//	Pointer get_cur_frame_type();
//	void irp_finalize_cons();
//	void set_optimize(int value);
//	int get_optimize();
//	void set_opt_constant_folding(int value);
//	void set_opt_algebraic_simplification(int value);
//	void set_opt_cse(int value);
//	int get_opt_cse();
//	void set_opt_global_cse(int value);
//	void set_opt_combo(int value);
//	void set_opt_strength_red(int value);
//	void set_opt_unreachable_code(int value);
//	void set_opt_control_flow(int value);
//	void set_opt_control_flow_straightening(int value);
//	void set_opt_control_flow_weak_simplification(int value);
//	void set_opt_control_flow_strong_simplification(int value);
//	void set_opt_dyn_meth_dispatch(int value);
//	int get_opt_dyn_meth_dispatch();
//	void set_opt_optimize_class_casts(int value);
//	void set_opt_suppress_downcast_optimization(int value);
//	int get_opt_suppress_downcast_optimization();
//	void set_opt_fragile_ops(int value);
//	void set_opt_remove_confirm(int value);
//	void set_opt_scalar_replacement(int value);
//	void set_opt_ldst_only_null_ptr_exceptions(int value);
//	void set_opt_sel_based_null_check_elim(int value);
//	void set_opt_global_null_ptr_elimination(int value);
//	void set_opt_auto_create_sync(int value);
//	void set_opt_normalize(int value);
//	void set_opt_precise_exc_context(int value);
//	void set_opt_alias_analysis(int value);
//	void set_opt_closed_world(int value);
//	void save_optimization_state(Pointer state);
//	void restore_optimization_state(Pointer state);
//	void all_optimizations_off();
//	void do_node_verification(/* firm_verification_t */int mode);
//	void local_optimize_node(Pointer n);
//	void local_optimize_graph(Pointer irg);
//	int optimize_graph_df(Pointer irg);
//	void dead_node_elimination(Pointer irg);
//	Pointer new_survive_dce();
//	void free_survive_dce(Pointer sd);
//	void survive_dce_register_irn(Pointer sd, Pointer place);
//	void remove_bad_predecessors(Pointer irg);
//	int inline_method(Pointer call, Pointer called_graph);
//	void place_code(Pointer irg);
//	void remove_critical_cf_edges(Pointer irg);
//	void remove_critical_cf_edges_ex(Pointer irg, int ignore_exception_edges);
//	void optimize_cf(Pointer irg);
//	void opt_cond_eval(Pointer irg);
//	void opt_bool(Pointer irg);
//	int conv_opt(Pointer irg);
//	void data_flow_scalar_replacement_opt(Pointer irg);
//	void escape_enalysis_irg(Pointer irg, Pointer callback);
//	void escape_analysis(int run_scalar_replace, Pointer callback);
//	void optimize_funccalls(int force_run, Pointer callback);
//	void do_gvn_pre(Pointer irg);
//	void opt_if_conv(Pointer irg, Pointer params);
//	void opt_sync(Pointer irg);
//	Pointer can_replace_load_by_const(Pointer load, Pointer c);
//	int optimize_load_store(Pointer irg);
//	void optimize_loop_unrolling(Pointer irg);
//	void opt_frame_irg(Pointer irg);
//	void opt_osr(Pointer irg, int flags);
//	void remove_phi_cycles(Pointer irg);
//	void proc_cloning(float threshold);
//	int optimize_reassociation(Pointer irg);
//	void normalize_one_return(Pointer irg);
//	void normalize_n_returns(Pointer irg);
//	int scalar_replacement_opt(Pointer irg);
//	void reduce_strength(Pointer irg);
//	int opt_tail_rec_irg(Pointer irg);
//	void opt_tail_recursion();
//	void normalize_irp_class_casts(Pointer gppt_fct);
//	void normalize_irg_class_casts(Pointer irg, Pointer gppt_fct);
//	void optimize_class_casts();
//	void combo(Pointer irg);
//	void inline_small_irgs(Pointer irg, int size);
//	void inline_leave_functions(int maxsize, int leavesize, int size, int ignore_runtime);
//	void inline_functions(int maxsize, int inline_threshold);
//	int shape_blocks(Pointer irg);
//	void gc_irgs(int n_keep, Pointer keep_arr);
//	void lower_calls_with_compounds(Pointer params);
//	void lower_CopyB(Pointer irg, int max_size, int native_mode_bytes);
//	void lower_switch(Pointer irg, int spare_size);
//	void lower_dw_ops(Pointer param);
//	Pointer def_create_intrinsic_fkt(Pointer method, Pointer op, Pointer imode, Pointer omode, Pointer context);
//	void lower_highlevel_graph(Pointer irg, int lower_bitfields);
//	void lower_highlevel(int lower_bitfields);
//	void lower_const_code();
//	void ir_lower_mode_b(Pointer irg, Pointer config);
//	int lower_intrinsics(Pointer list, int length, int part_block_used);
//	int i_mapper_abs(Pointer call, Pointer ctx);
//	int i_mapper_sqrt(Pointer call, Pointer ctx);
//	int i_mapper_cbrt(Pointer call, Pointer ctx);
//	int i_mapper_pow(Pointer call, Pointer ctx);
//	int i_mapper_exp(Pointer call, Pointer ctx);
//	int i_mapper_log(Pointer call, Pointer ctx);
//	int i_mapper_sin(Pointer call, Pointer ctx);
//	int i_mapper_cos(Pointer call, Pointer ctx);
//	int i_mapper_tan(Pointer call, Pointer ctx);
//	int i_mapper_asin(Pointer call, Pointer ctx);
//	int i_mapper_acos(Pointer call, Pointer ctx);
//	int i_mapper_atan(Pointer call, Pointer ctx);
//	int i_mapper_sinh(Pointer call, Pointer ctx);
//	int i_mapper_cosh(Pointer call, Pointer ctx);
//	int i_mapper_tanh(Pointer call, Pointer ctx);
//	int i_mapper_strcmp(Pointer call, Pointer ctx);
//	int i_mapper_strncmp(Pointer call, Pointer ctx);
//	int i_mapper_strlen(Pointer call, Pointer ctx);
//	int i_mapper_memcpy(Pointer call, Pointer ctx);
//	int i_mapper_memset(Pointer call, Pointer ctx);
//	int i_mapper_alloca(Pointer call, Pointer ctx);
//	int i_mapper_RuntimeCall(Pointer node, Pointer rt);
//	int get_irn_n_outs(Pointer node);
//	Pointer get_irn_out(Pointer def, int pos);
//	Pointer get_irn_out_ex(Pointer def, int pos, Pointer in_pos);
//	void set_irn_out(Pointer def, int pos, Pointer use, int in_pos);
//	int get_Block_n_cfg_outs(Pointer node);
//	int get_Block_n_cfg_outs_ka(Pointer node);
//	Pointer get_Block_cfg_out(Pointer node, int pos);
//	Pointer get_Block_cfg_out_ka(Pointer node, int pos);
//	void irg_out_walk(Pointer node, Pointer pre, Pointer post, Pointer env);
//	void irg_out_block_walk(Pointer node, Pointer pre, Pointer post, Pointer env);
//	int get_irn_outs_computed(Pointer node);
//	void compute_irg_outs(Pointer irg);
//	void compute_irp_outs();
//	void assure_irg_outs(Pointer irg);
//	void free_irg_outs(Pointer irg);
//	void free_irp_outs();
//	int get_entity_n_accesses(Pointer ent);
//	Pointer get_entity_access(Pointer ent, int pos);
//	int get_entity_n_references(Pointer ent);
//	Pointer get_entity_reference(Pointer ent, int pos);
//	int get_type_n_allocs(Pointer tp);
//	Pointer get_type_alloc(Pointer tp, int pos);
//	int get_type_n_casts(Pointer tp);
//	Pointer get_type_cast(Pointer tp, int pos);
//	void add_type_cast(Pointer tp, Pointer cast);
//	int get_class_n_upcasts(Pointer clss);
//	int get_class_n_downcasts(Pointer clss);
//	int get_type_n_pointertypes_to(Pointer tp);
//	Pointer get_type_pointertype_to(Pointer tp, int pos);
//	void add_type_pointertype_to(Pointer tp, Pointer ptp);
//	int get_type_n_arraytypes_of(Pointer tp);
//	Pointer get_type_arraytype_of(Pointer tp, int pos);
//	void add_type_arraytype_of(Pointer tp, Pointer atp);
//	/* irg_outs_state */int get_trouts_state();
//	void set_trouts_inconsistent();
//	void compute_trouts();
//	void free_trouts();
//	Pointer get_Block_idom(Pointer bl);
//	void set_Block_idom(Pointer bl, Pointer n);
//	int get_Block_dom_depth(Pointer bl);
//	void set_Block_dom_depth(Pointer bl, int depth);
//	int get_Block_dom_pre_num(Pointer bl);
//	void set_Block_dom_pre_num(Pointer bl, int num);
//	Pointer get_Block_ipostdom(Pointer bl);
//	void set_Block_ipostdom(Pointer bl, Pointer n);
//	int get_Block_postdom_depth(Pointer bl);
//	void set_Block_postdom_depth(Pointer bl, int depth);
//	int get_Block_postdom_pre_num(Pointer bl);
//	void set_Block_postdom_pre_num(Pointer bl, int num);
//	int get_Block_dom_tree_pre_num(Pointer bl);
//	int get_Block_dom_max_subtree_pre_num(Pointer bl);
//	Pointer get_Block_dominated_first(Pointer bl);
//	Pointer get_Block_dominated_next(Pointer dom);
//	int block_dominates(Pointer a, Pointer b);
//	int block_strictly_dominates(Pointer a, Pointer b);
//	Pointer node_smallest_common_dominator(Pointer a, Pointer b);
//	Pointer node_users_smallest_common_dominator(Pointer irn, int handle_phi);
//	int block_postdominates(Pointer a, Pointer b);
//	int block_strictly_postdominates(Pointer a, Pointer b);
//	void dom_tree_walk(Pointer n, Pointer pre, Pointer post, Pointer env);
//	void postdom_tree_walk(Pointer n, Pointer pre, Pointer post, Pointer env);
//	void dom_tree_walk_irg(Pointer irg, Pointer pre, Pointer post, Pointer env);
//	void postdom_tree_walk_irg(Pointer irg, Pointer pre, Pointer post, Pointer env);
//	void compute_doms(Pointer irg);
//	void assure_doms(Pointer irg);
//	void compute_postdoms(Pointer irg);
//	void assure_postdoms(Pointer irg);
//	void free_dom(Pointer irg);
//	void free_postdom(Pointer irg);
//	void cgana(Pointer len, Pointer free_methods);
//	void free_callee_info(Pointer irg);
//	void free_irp_callee_info();
//	void opt_call_addrs();
//	int is_backedge(Pointer n, int pos);
//	void set_backedge(Pointer n, int pos);
//	void set_not_backedge(Pointer n, int pos);
//	int has_backedges(Pointer n);
//	void clear_backedges(Pointer n);
//	int is_ir_loop(Pointer thing);
//	void set_irg_loop(Pointer irg, Pointer l);
//	Pointer get_irg_loop(Pointer irg);
//	Pointer get_irn_loop(Pointer n);
//	Pointer get_loop_outer_loop(Pointer loop);
//	int get_loop_depth(Pointer loop);
//	int get_loop_n_sons(Pointer loop);
//	Pointer get_loop_son(Pointer loop, int pos);
//	int get_loop_n_nodes(Pointer loop);
//	Pointer get_loop_node(Pointer loop, int pos);
//	int get_loop_n_elements(Pointer loop);
////	loop_element get_loop_element(Pointer loop, int pos);
//	int get_loop_element_pos(Pointer loop, Pointer le);
//	int get_loop_loop_nr(Pointer loop);
//	void set_loop_link(Pointer loop, Pointer link);
//	Pointer get_loop_link(Pointer loop);
//	int construct_backedges(Pointer irg);
//	int construct_cf_backedges(Pointer irg);
//	void assure_cf_loop(Pointer irg);
//	void free_loop_information(Pointer irg);
//	void free_all_loop_information();
//	int is_loop_invariant(Pointer n, Pointer block);
//	/* irp_callgraph_state */int get_irp_callgraph_state();
//	void set_irp_callgraph_state(/* irp_callgraph_state */int s);
//	int get_irg_n_callers(Pointer irg);
//	Pointer get_irg_caller(Pointer irg, int pos);
//	int is_irg_caller_backedge(Pointer irg, int pos);
//	int has_irg_caller_backedge(Pointer irg);
//	int get_irg_caller_loop_depth(Pointer irg, int pos);
//	int get_irg_n_callees(Pointer irg);
//	Pointer get_irg_callee(Pointer irg, int pos);
//	int is_irg_callee_backedge(Pointer irg, int pos);
//	int has_irg_callee_backedge(Pointer irg);
//	int get_irg_callee_loop_depth(Pointer irg, int pos);
//	int get_irg_loop_depth(Pointer irg);
//	int get_irg_recursion_depth(Pointer irg);
//	double get_irg_method_execution_frequency(Pointer irg);
//	void compute_callgraph();
//	void free_callgraph();
//	void callgraph_walk(Pointer pre, Pointer post, Pointer env);
//	void find_callgraph_recursions();
//	void compute_performance_estimates();
//	void analyse_loop_nesting_depth();
//	/* loop_nesting_depth_state */int get_irp_loop_nesting_depth_state();
//	void set_irp_loop_nesting_depth_state(/* loop_nesting_depth_state */int s);
//	void set_irp_loop_nesting_depth_state_inconsistent();
//	void construct_confirms(Pointer irg);
//	void remove_confirms(Pointer irg);
//	/* ptr_access_kind */int get_method_param_access(Pointer ent, int pos);
//	void analyze_irg_args(Pointer irg);
//	int get_method_param_weight(Pointer ent, int pos);
//	void analyze_irg_args_weight(Pointer irg);
//	void init_irtypeinfo();
//	void free_irtypeinfo();
//	void set_irg_typeinfo_state(Pointer irg, /* ir_typeinfo_state */int s);
//	/* ir_typeinfo_state */int get_irg_typeinfo_state(Pointer irg);
//	/* ir_typeinfo_state */int get_irp_typeinfo_state();
//	void set_irp_typeinfo_state(/* ir_typeinfo_state */int s);
//	void set_irp_typeinfo_inconsistent();
//	Pointer get_irn_typeinfo_type(Pointer n);
//	void set_irn_typeinfo_type(Pointer n, Pointer tp);
//	/* ir_storage_class_class_t */int classify_pointer(Pointer irg, Pointer irn, Pointer ent);
//	String get_ir_alias_relation_name(/* ir_alias_relation */int rel);
//	/* ir_alias_relation */int get_alias_relation(Pointer irg, Pointer adr1, Pointer mode1, Pointer adr2, Pointer mode2);
//	void set_language_memory_disambiguator(Pointer func);
//	void mem_disambig_init();
//	/* ir_alias_relation */int get_alias_relation_ex(Pointer irg, Pointer adr1, Pointer mode1, Pointer adr2, Pointer mode2);
//	void mem_disambig_term();
//	/* ir_entity_usage_computed_state */int get_irg_entity_usage_state(Pointer irg);
//	void set_irg_entity_usage_state(Pointer irg, /* ir_entity_usage_computed_state */int state);
//	void assure_irg_entity_usage_computed(Pointer irg);
//	/* ir_entity_usage_computed_state */int get_irp_globals_entity_usage_state();
//	void set_irp_globals_entity_usage_state(/* ir_entity_usage_computed_state */int state);
//	void assure_irp_globals_entity_usage_computed();
//	int get_irg_memory_disambiguator_options(Pointer irg);
//	void set_irg_memory_disambiguator_options(Pointer irg, int options);
//	void set_irp_memory_disambiguator_options(int options);
//	void mark_private_methods();
//	int get_region_n_ins(Pointer region);
//	Pointer get_region_in(Pointer region, int pos);
//	void add_region_in(Pointer region, Pointer in);
//	int get_region_n_outs(Pointer region);
//	int get_region_n_exc_outs(Pointer region);
//	Pointer get_loop_cfop(Pointer region, int pos);
//	void construct_intervals(Pointer irg);
//	void free_intervals();
//	void dump_interval_graph(Pointer irg, String suffix);
//	int get_irn_loop_call_depth(Pointer n);
//	int get_irn_cfloop_depth(Pointer n);
//	int get_irn_recursion_depth(Pointer n);
//	int get_weighted_loop_depth(Pointer n);
//	double get_irn_final_cost(Pointer n);
//	double get_type_estimated_n_instances(Pointer clss);
//	double get_type_estimated_mem_consumption_bytes(Pointer tp);
//	int get_type_estimated_size_bytes(Pointer tp);
//	int get_type_estimated_n_fields(Pointer tp);
//	double get_type_estimated_n_casts(Pointer clss);
//	double get_class_estimated_n_upcasts(Pointer clss);
//	double get_class_estimated_n_downcasts(Pointer clss);
//	double get_class_estimated_n_dyncalls(Pointer clss);
//	double get_class_estimated_dispatch_writes(Pointer clss);
//	double get_class_estimated_dispatch_reads(Pointer clss);
//	double get_entity_estimated_n_loads(Pointer ent);
//	double get_entity_estimated_n_stores(Pointer ent);
//	double get_entity_estimated_n_calls(Pointer ent);
//	double get_entity_estimated_n_dyncalls(Pointer ent);
//	int is_fragile_Proj(Pointer n);
//	double get_irn_exec_freq(Pointer n);
//	double get_Block_exec_freq(Pointer b);
//	double get_region_exec_freq(Pointer reg);
//	void compute_execution_frequency(Pointer irg, int default_loop_weight, double exception_probability);
//	void compute_execution_frequencies(int default_loop_weight, double exception_probability);
//	void free_execution_frequency();
//	/* exec_freq_state */int get_irg_exec_freq_state(Pointer irg);
//	void set_irg_exec_freq_state(Pointer irg, /* exec_freq_state */int s);
//	void set_irg_exec_freq_state_inconsistent(Pointer irg);
//	/* exec_freq_state */int get_irp_exec_freq_state();
//	void set_irp_exec_freq_state_inconsistent();
//	void exchange(Pointer old, Pointer nw);
//	void turn_into_tuple(Pointer node, int arity);
//	void collect_phiprojs(Pointer irg);
//	void part_block(Pointer node);
//	void kill_node(Pointer node);
//	void irg_walk(Pointer node, Pointer pre, Pointer post, Pointer env);
//	void irg_walk_graph(Pointer irg, Pointer pre, Pointer post, Pointer env);
//	void irg_walk_in_or_dep(Pointer node, Pointer pre, Pointer post, Pointer env);
//	void irg_walk_in_or_dep_graph(Pointer irg, Pointer pre, Pointer post, Pointer env);
//	void all_irg_walk(Pointer pre, Pointer post, Pointer env);
//	void irg_block_walk(Pointer node, Pointer pre, Pointer post, Pointer env);
//	void irg_block_walk_graph(Pointer irg, Pointer pre, Pointer post, Pointer env);
//	void walk_const_code(Pointer pre, Pointer post, Pointer env);
//	void irg_walk_blkwise_graph(Pointer irg, Pointer pre, Pointer post, Pointer env);
//	void irg_walk_in_or_dep_blkwise_graph(Pointer irg, Pointer pre, Pointer post, Pointer env);
//	void irg_walk_blkwise_dom_top_down(Pointer irg, Pointer pre, Pointer post, Pointer env);
//	void irg_walk_anchors(Pointer irg, Pointer pre, Pointer post, Pointer env);
//	Pointer arch_dep_default_factory();
//	void arch_dep_init(Pointer factory);
//	void arch_dep_set_opts(/* arch_dep_opts_t */int opts);
//	Pointer arch_dep_replace_mul_with_shifts(Pointer irn);
//	Pointer arch_dep_replace_div_by_const(Pointer irn);
//	Pointer arch_dep_replace_mod_by_const(Pointer irn);
//	void arch_dep_replace_divmod_by_const(Pointer div, Pointer mod, Pointer irn);
//	void register_hook(/* hook_type_t */int hook, Pointer entry);
//	void unregister_hook(/* hook_type_t */int hook, Pointer entry);
//	int firm_init_hooks();
//	void stat_dump_snapshot(String name, String phase);
//	void firm_init_stat(int enable_options);
//	void stat_term();
//	int stat_is_active();
//	String dbg_action_2_str(/* dbg_action */int a);
//	void dbg_init(Pointer dbg_info_merge_pair, Pointer dbg_info_merge_sets, Pointer snprint_dbg);
//	void default_dbg_info_merge_pair(Pointer nw, Pointer old, /* dbg_action */int info);
//	void default_dbg_info_merge_sets(Pointer new_nodes, int n_new_nodes, Pointer old_nodes, int n_old_nodes, /* dbg_action */int info);
//	void ir_set_debug_retrieve(Pointer func);
//	String ir_retrieve_dbg_info(Pointer dbg, Pointer line);
//	Pointer firm_seqno_enter(String filename, int lineno);
//	Pointer firm_seqno_enter_id(Pointer filename, int lineno);
//	String firm_seqno_retrieve(Pointer seqno, Pointer lineno);
//	void firm_seqno_init();
//	void firm_seqno_term();
//	void firm_init_ycomp_debugger(String host, int port);
//	void firm_finish_ycomp_debugger();
//	void set_dump_ir_graph_hook(Pointer hook);
//	void set_dump_node_vcgattr_hook(Pointer hook);
//	void set_dump_edge_vcgattr_hook(Pointer hook);
//	void set_dump_node_edge_hook(Pointer func);
//	Pointer get_dump_node_edge_hook();
//	void set_dump_block_edge_hook(Pointer func);
//	Pointer get_dump_block_edge_hook();
//	void dump_ir_graph(Pointer irg, String suffix);
//	void dump_ir_graph_file(Pointer irg, Pointer out);
//	void dump_ir_block_graph(Pointer irg, String suffix);
//	void dump_ir_block_graph_file(Pointer irg, Pointer out);
//	void dump_ir_extblock_graph(Pointer irg, String suffix);
//	void dump_ir_extblock_graph_file(Pointer irg, Pointer out);
//	void dump_all_cg_block_graph(String suffix);
//	void dump_ir_graph_w_types(Pointer irg, String suffix);
//	void dump_ir_graph_w_types_file(Pointer irg, Pointer out);
//	void dump_ir_block_graph_w_types(Pointer irg, String suffix);
//	void dump_all_ir_graphs(Pointer dump_graph, String suffix);
//	void dump_cfg(Pointer irg, String suffix);
//	void dump_subgraph(Pointer root, int depth, String suffix);
//	void dump_callgraph(String suffix);
//	void dump_type_graph(Pointer irg, String suffix);
//	void dump_all_types(String suffix);
//	void dump_class_hierarchy(int entities, String suffix);
//	void dump_loop_tree(Pointer irg, String suffix);
//	void dump_loop(Pointer l, String suffix);
//	void dump_callgraph_loop_tree(String suffix);
//	int dump_irnode_to_file(Pointer f, Pointer n);
//	void dump_irnode(Pointer n);
//	void dump_graph_to_file(Pointer F, Pointer irg);
//	void dump_graph(Pointer g);
//	void dump_graph_as_text(Pointer irg, String suffix);
//	void dump_entity_to_file(Pointer F, Pointer ent, int verbosity);
//	void dump_entity(Pointer ent);
//	void dump_type_to_file(Pointer f, Pointer tp, /* dump_verbosity */int verbosity);
//	void dump_type(Pointer tp);
//	void dump_types_as_text(int verbosity, String suffix);
//	void dump_globals_as_text(int verbosity, String suffix);
//	void only_dump_method_with_name(Pointer name);
//	Pointer get_dump_file_filter_ident();
//	int is_filtered_dump_name(Pointer name);
//	void turn_off_edge_labels();
//	void dump_consts_local(int flag);
//	void dump_node_idx_label(int flag);
//	void dump_constant_entity_values(int flag);
//	void dump_keepalive_edges(int flag);
//	int get_opt_dump_keepalive_edges();
//	void dump_out_edges(int flag);
//	void dump_dominator_information(int flag);
//	void dump_loop_information(int flag);
//	void dump_backedge_information(int flag);
//	void set_opt_dump_analysed_type_info(int flag);
//	void dump_pointer_values_to_info(int flag);
//	void dump_ld_names(int flag);
//	void dump_all_anchors(int flag);
//	void dump_macroblock_edges(int flag);
//	void dump_block_marker_in_title(int flag);
//	Pointer dump_add_node_info_callback(Pointer cb, Pointer data);
//	void dump_remv_node_info_callback(Pointer handle);
//	void ir_printf(String fmt, Object ... args);
//	void ir_fprintf(Pointer f, String fmt, Object ... args);
//	void ir_snprintf(String buf, NativeLong n, String fmt, Object ... args);
//	void ir_vprintf(String fmt, Pointer args);
//	void ir_vfprintf(Pointer f, String fmt, Pointer args);
//	void ir_vsnprintf(String buf, NativeLong len, String fmt, Pointer args);
//	void ir_obst_vprintf(Pointer obst, String fmt, Pointer args);
//	int irn_vrfy(Pointer checknode);
//	int irn_vrfy_irg(Pointer checknode, Pointer irg);
//	int irn_vrfy_irg_dump(Pointer checknode, Pointer irg, Pointer bad_string);
//	int irg_verify(Pointer irg, int flags);
//	int irg_vrfy_bads(Pointer irg, int flags);
//	void vrfy_enable_entity_tests(int enable);
//	void edges_notify_edge_kind(Pointer src, int pos, Pointer tgt, Pointer old_tgt, /* ir_edge_kind_t */int kind, Pointer irg);
//	Pointer get_irn_out_edge_first_kind(Pointer irn, /* ir_edge_kind_t */int kind);
//	Pointer get_irn_out_edge_next(Pointer irn, Pointer last);
//	Pointer get_edge_src_irn(Pointer edge);
//	int get_irn_n_edges(Pointer irn);
//	int get_edge_src_pos(Pointer edge);
//	Pointer get_irn_edge_kind(Pointer irg, Pointer irn, int pos, /* ir_edge_kind_t */int kind);
//	int get_irn_n_edges_kind(Pointer irn, /* ir_edge_kind_t */int kind);
//	int edges_activated_kind(Pointer irg, /* ir_edge_kind_t */int kind);
//	void edges_activate_kind(Pointer irg, /* ir_edge_kind_t */int kind);
//	void edges_deactivate_kind(Pointer irg, /* ir_edge_kind_t */int kind);
//	void edges_reroute_kind(Pointer old, Pointer nw, /* ir_edge_kind_t */int kind, Pointer irg);
//	int edges_verify(Pointer irg);
//	void edges_init_dbg(int do_dbg);
//	Pointer get_irn_edge(Pointer irg, Pointer src, int pos);
//	void edges_activate(Pointer irg);
//	void edges_deactivate(Pointer irg);
//	int edges_assure(Pointer irg);
//	int edges_assure_kind(Pointer irg, /* ir_edge_kind_t */int kind);
//	void edges_node_deleted(Pointer irn, Pointer irg);
//	void edges_notify_edge(Pointer src, int pos, Pointer tgt, Pointer old_tgt, Pointer irg);
//	void irg_block_edges_walk(Pointer block, Pointer pre, Pointer post, Pointer env);
//	void edges_reset_private_data(Pointer irg, int offset, int size);
//	void be_opt_register();
//	int be_parse_arg(String arg);
//	Pointer be_get_backend_param();
//	void be_main(Pointer output, String compilation_unit_name);
//	/* asm_constraint_flags_t */int be_parse_asm_constraints(String constraints);
//	int be_is_valid_clobber(String clobber);
//	void ir_init(Pointer params);
//	void ir_finish();
//	int ir_get_version_major();
//	int ir_get_version_minor();
//	String ir_get_version_revision();
//	String ir_get_version_build();
}
